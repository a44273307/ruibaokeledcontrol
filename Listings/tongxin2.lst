C251 COMPILER V5.60.0,  tongxin2                                                           07/08/23  20:41:03  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE tongxin2
OBJECT MODULE PLACED IN .\Objects\tongxin2.obj
COMPILER INVOKED BY: D:\keilc251\C251\BIN\C251.EXE tongxin2.c LARGE BROWSE DEBUG PRINT(.\Listings\tongxin2.lst) TABS(2) 
                    -OBJECT(.\Objects\tongxin2.obj) 

stmt  level    source

    1          
    2          #include "stc32g.h"
    3          #include "config.h"
    4          
    5          
    6          #include <stdio.h>
    7          #include "tongxin.h"
    8          #include "func.h"
    9          
   10          #include "tongxin2.h"
   11          
   12          #define use 1
   13          #define use 1
   14          #define nouse 0
   15          
   16          
   17          VectorInfo Vectorpingmu[maxzhi];
   18          VectorInfo VectorDiannao[maxzhi];
   19          VectorInfo VectorToPingmu[maxzhi];
   20          
   21          int getemptyindex2(VectorInfo* Vectorbase)
   22          {
   23   1          int i;
   24   1          for(i = 0; i < maxzhi; i++)
   25   1          {
   26   2              if(Vectorbase[i].falg == 0)
   27   2                  return i;
   28   2          }
   29   1          return i;
   30   1      }
   31          
   32          int VectorIsEmpty(VectorInfo* Vectorbase)
   33          {
   34   1          if(0 == getemptyindex2(Vectorbase))
   35   1          {
   36   2              return 1;
   37   2          }
   38   1          return 0;
   39   1      }
   40          
   41          int isfull2(VectorInfo* Vectorbase)
   42          {
   43   1          if(maxzhi == getemptyindex2(Vectorbase))
   44   1          {
   45   2              return 1;
   46   2          }
   47   1          return 0;
   48   1      }
   49          
   50          void VectorPush(VectorInfo* Vectorbase, int weizhi, int zhi)
   51          {
   52   1          int dizhi;
   53   1          int i, j, k;
   54   1          // printf("VectorPush %d %d",weizhi,zhi);
   55   1          dizhi = getemptyindex2(Vectorbase);
   56   1          // 有就更新
   57   1          for(i = 0; i < dizhi; i++)
   58   1          {
C251 COMPILER V5.60.0,  tongxin2                                                           07/08/23  20:41:03  PAGE 2   

   59   2              if(Vectorbase[i].weizhi == weizhi)
   60   2              {
   61   3                  Vectorbase[i].zhi = zhi;
   62   3                  return;
   63   3              }
   64   2          }
   65   1          // 满了丢
   66   1          if(maxzhi == getemptyindex2(Vectorbase))
   67   1          {
   68   2              return;
   69   2          }
   70   1          // 入。
   71   1          Vectorbase[dizhi].weizhi = weizhi;
   72   1          Vectorbase[dizhi].zhi = zhi;
   73   1          Vectorbase[dizhi].falg = 1;
   74   1      }
*** WARNING C47 IN LINE 53 OF tongxin2.c: 'j': unreferenced local variable
*** WARNING C47 IN LINE 53 OF tongxin2.c: 'k': unreferenced local variable
   75          
   76          int VectorGet(VectorInfo* Vectorbase, VectorInfo* get)
   77          {
   78   1          int i, j, k;
   79   1          int dizhi = getemptyindex2(Vectorbase);
   80   1          if(0 == getemptyindex2(Vectorbase))
   81   1          {
   82   2              return 0;
   83   2          }
   84   1          memcpy(get, &Vectorbase[0], sizeof(VectorInfo));
   85   1          for(i = 0; i < dizhi - 1; i++)
   86   1          {
   87   2              memcpy(&Vectorbase[i], &Vectorbase[i + 1], sizeof(VectorInfo));
   88   2          }
   89   1          // printf("VectorGet %d %d",get->weizhi,get->zhi);
   90   1      
   91   1          Vectorbase[dizhi - 1].falg = nouse;
   92   1          return 1;
   93   1      }
*** WARNING C47 IN LINE 78 OF tongxin2.c: 'j': unreferenced local variable
*** WARNING C47 IN LINE 78 OF tongxin2.c: 'k': unreferenced local variable


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       383     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       360         14
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
