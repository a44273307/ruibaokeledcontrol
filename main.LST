C51 COMPILER V9.00   MAIN                                                                  09/23/2023 15:29:01 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil2\C51\BIN\C51.EXE main.c LARGE ROM(COMPACT) BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /************************************************************************************
   2             
   3          程序名称： （晶振频率18.432MHz） 
   4          功能说明: 通过串口3发送“Everything is possible!”  
   5                    波特率9600，数据位8，奇偶效验无，停止位1，数据流控制无  
   6          ************************************************************************************/
   7          #include "stc15f2k60s2.h"           // 单片机STC15F2K60S2头文件,可以不再加入reg51.h
   8          #include <intrins.h>                                    // 加入此头文件后,可使用_nop_库函数
   9          #include "delay.h"                      // 延时函数头文件
  10          #include "uart.h"                               // 串行通信函数头文件
  11          #define  uint unsigned int  
  12          #define  uchar unsigned char    
  13          #include <stdio.h>
  14          #include <string.h>
  15          #include "MODBUS.h"
  16          
  17          #include <stdio.h>
  18          #include <string.h>
  19          #include <stdlib.h>
  20          #include "tongxin2.h"
  21          #include "EEPROM.h"
  22          char buf3[60];
  23          char flag3 = 0;
  24          int weishu3;
  25          int timeleft1, timeleft2, timeleft3, timeleft4;
  26          void com1clearbuf()
  27          {
  28   1          memset(buf3, 0, sizeof(buf3));
  29   1              weishu3 = 0;
  30   1      }
  31          void chuankou1put(char c)
  32          {
  33   1              buf3[weishu3++] = c;
  34   1              if (weishu3 > sizeof(buf3) - 3)
  35   1                      weishu3 = 0;
  36   1              timeleft3 = 3;
  37   1      }
  38          void dealchuankou();    
  39          void chuliguankji();
  40          void chuankou1time()
  41          {
  42   1              if (timeleft3 > 0)
  43   1              {
  44   2                      timeleft3--;
  45   2                      if (timeleft3 == 0) // 数据一次收完了.
  46   2                      {
  47   3                              flag3 = 1;
  48   3                  dealchuankou();     
  49   3                      }
  50   2              }
  51   1      }
  52          
  53          
  54          
  55          
C51 COMPILER V9.00   MAIN                                                                  09/23/2023 15:29:01 PAGE 2   

  56          char* mystrstr(const char* haystack, const char* needle) {
  57   1          if (*needle == '\0') {
  58   2              return (char*)haystack;
  59   2          }
  60   1      
  61   1          while (*haystack != '\0') {
  62   2              const char* h = haystack;
  63   2              const char* n = needle;
  64   2      
  65   2              while (*n != '\0' && *h == *n) {
  66   3                  h++;
  67   3                  n++;
  68   3              }
  69   2      
  70   2              if (*n == '\0') {
  71   3                  return (char*)haystack; // 子串匹配成功，返回起始位置
  72   3              }
  73   2      
  74   2              haystack++;
  75   2          }
  76   1      
  77   1          return NULL; // 未找到子串，返回NULL
  78   1      }
  79          size_t mystrlen(const char* str) {
  80   1          size_t length = 0;
  81   1          while (str[length] != '\0') {
  82   2              length++;
  83   2          }
  84   1          return length;
  85   1      }
  86          
  87          char* myaddstrstr(const char* haystack, const char* needle)
  88          {       
  89   1              char* result = mystrstr(haystack, needle);
  90   1               if (result != NULL)
  91   1               {
  92   2                      result=result+mystrlen(needle);
  93   2               }
  94   1               return result;
  95   1      }
  96          int bakweizhi;
  97          int bakzhi;
  98          void jixi2(char* input)
  99          {
 100   1              char *p=input;
 101   1              char *p1;
 102   1              int i;
 103   1              unsigned int weizhi;
 104   1              unsigned int zhi;
 105   1              //554-2234;333-4;end
 106   1          
 107   1              for( i=0;i<100;i++)
 108   1              {
 109   2                      p1=myaddstrstr(p,";"); //找有没有下一个的
 110   2                      if(p1==NULL)
 111   2                      {
 112   3                              break;
 113   3                      }
 114   2                      weizhi = atoi(p);
 115   2                      p=myaddstrstr(p,"-");
 116   2                      zhi = atoi(p);
 117   2              if(i%2==0)
C51 COMPILER V9.00   MAIN                                                                  09/23/2023 15:29:01 PAGE 3   

 118   2              {
 119   3                  bakweizhi=weizhi;
 120   3                  bakzhi=zhi;
 121   3              }
 122   2              if(i%2==1)
 123   2              {
 124   3                  if(weizhi==bakweizhi && bakzhi==zhi)
 125   3                  {
 126   4                      printf("get set%d-%d",weizhi,zhi);
 127   4                      push2(weizhi,zhi);
 128   4                  }
 129   3                  else
 130   3                  {
 131   4                      printf("get failed");
 132   4                  }
 133   3              }
 134   2                      p=myaddstrstr(p,";");  //指向下一个后面
 135   2                      
 136   2              }
 137   1      }
 138          int isokser(char *str);
 139          void jiexi(char* input)
 140          {
 141   1              char par[60]={0};
 142   1              char *begin;
 143   1              char *end;
 144   1          
 145   1              begin=myaddstrstr(input,"set:");
 146   1              end=myaddstrstr(begin,"end");
 147   1              if(begin!=NULL && end!=NULL)
 148   1              {
 149   2              *end=0;
 150   2              *(end+4)=0;
 151   2              if(0==isokser(input))
 152   2              {
 153   3                  printf("failedcheck %s",input);
 154   3                  return ;
 155   3              }
 156   2                      strcpy(par,begin);
 157   2                      jixi2(par);
 158   2              }
 159   1      }
 160          
 161          char* my_strstr(const char* haystack, const char* needle) {
 162   1          if (*needle == '\0') {
 163   2              return (char*) haystack;
 164   2          }
 165   1      
 166   1          while (*haystack != '\0') {
 167   2              const char* h = haystack;
 168   2              const char* n = needle;
 169   2      
 170   2              while (*h == *n && *n != '\0') {
 171   3                  h++;
 172   3                  n++;
 173   3              }
 174   2      
 175   2              if (*n == '\0') {
 176   3                  return (char*) haystack;
 177   3              }
 178   2      
 179   2              haystack++;
C51 COMPILER V9.00   MAIN                                                                  09/23/2023 15:29:01 PAGE 4   

 180   2          }
 181   1      
 182   1          return NULL;
 183   1      }
 184          
 185          // 串口的处理，，开机，解析等等。
 186          void dealchuankou()
 187          {
 188   1          chuliguankji();
 189   1          buf3[58]=0;
 190   1              jiexi(buf3);
 191   1              memset(buf3, 0, sizeof(buf3));
 192   1              weishu3 = 0;
 193   1      }
 194          
 195          
 196          int delay_mszhi;
 197          uint temp1,temp2;
 198          
 199          
 200          void io_inint()
 201          {
 202   1              P0M1 = 0;       P0M0 = 0;       //设置P0.0~P0.7为准双向口
 203   1        P1M0 = 0x00; // 设置P1.0为ADC口
 204   1        P1M1 = 0x80;
 205   1              P2M1 = 0;       P2M0 = 0;       //设置P2.0~P2.7为准双向口 
 206   1                  P3M0 = 0;
 207   1          P3M1 = 0;
 208   1              P4M1 = 0;       P4M0 = 0;       //设置P4.0~P4.7为准双向口
 209   1              // P5M1 = 0;    P5M0 = 0;       //设置P5.0~P5.7为准双向口
 210   1      
 211   1                  P5M0 = 0xff; P5M1 = 0x00; 
 212   1      
 213   1      }
 214          
 215          
 216          void delay_ms(int m);
 217          
 218          
 219          
 220          sbit out2=P3^2;
 221          
 222          extern void deanyan();
 223          sbit fen=P5^4;
 224          
 225          
 226          #define Iapid 0x0000
 227          void IapErase(int addr);
 228          void Exxwrite(int addr, uint dat);
 229          void writebuf()
 230          {
 231   1          int i;
 232   1          int dizhi=Iapid;
 233   1          IapErase(Iapid); // ????????
 234   1          Exxwrite(dizhi,55);
 235   1          for ( i = 0; i < len_HoldingReg; i++)
 236   1          {
 237   2              dizhi=dizhi+1;
 238   2              Exxwrite(dizhi,HoldingReg[i]);
 239   2          }
 240   1      }
 241          // 比较值是否发生了变化。。
C51 COMPILER V9.00   MAIN                                                                  09/23/2023 15:29:01 PAGE 5   

 242          int bufcheck[len_HoldingReg]={0};
 243          void buffchecktongbu()
 244          {
 245   1          int i;
 246   1          for ( i = 0; i < len_HoldingReg; i++)
 247   1          {
 248   2              bufcheck[i]=HoldingReg[i];
 249   2          }
 250   1      }
 251          int IsbuffcheckFailed()
 252          {
 253   1          int i;
 254   1          for ( i = 0; i < len_HoldingReg; i++)
 255   1          {
 256   2             if(bufcheck[i]!=HoldingReg[i])
 257   2             {
 258   3                return 1;
 259   3             }
 260   2          }
 261   1          return 0;
 262   1      }
 263          
 264          int timereport=0;
 265          void sendzhi(int weizhi,int zhi)
 266          {
 267   1          char out[30]={0};
 268   1          sprintf(out,"set:%d-%d;end",weizhi,zhi);
 269   1              printf(out);
 270   1      }
 271          void runreport()
 272          {
 273   1          if(timereport>1000)
 274   1          {
 275   2              timereport=0;
 276   2              sendzhi(4,HoldingReg[4]);
 277   2          }
 278   1      }
 279          void chuliguankji()
 280          {
 281   1          char* index;
 282   1          index=strstr(buf3,"@STCISP#");
 283   1              if(index==NULL)
 284   1              {
 285   2                  return  ;
 286   2              }
 287   1          IAP_CONTR=0x60;
 288   1      }
 289          
 290          void IapIdle()
 291          {
 292   1          IAP_CONTR = 0;                              //关闭IAP功能
 293   1          IAP_CMD = 0;                                //清除命令寄存器
 294   1          IAP_TRIG = 0;                               //清除触发寄存器
 295   1          IAP_ADDRH = 0x80;                           //将地址设置到非IAP区域
 296   1          IAP_ADDRL = 0;
 297   1      }
 298          
 299          uchar IapRead(int addr)
 300          {
 301   1          uchar dat;
 302   1      
 303   1          IAP_CONTR = 0x80;                           //使能IAP
C51 COMPILER V9.00   MAIN                                                                  09/23/2023 15:29:01 PAGE 6   

 304   1          IAP_TPS = 40;                               //设置等待参数12MHz
 305   1          IAP_CMD = 1;                                //设置IAP读命令
 306   1          IAP_ADDRL = addr;                           //设置IAP低地址
 307   1          IAP_ADDRH = addr >> 8;                      //设置IAP高地址
 308   1          IAP_TRIG = 0x5a;                            //写触发命令(0x5a)
 309   1          IAP_TRIG = 0xa5;                            //写触发命令(0xa5)
 310   1          _nop_();
 311   1          dat = IAP_DATA;                             //读IAP数据
 312   1          IapIdle();                                  //关闭IAP功能
 313   1      
 314   1          return dat;
 315   1      }
 316          
 317          void IapProgram(int addr, char dat)
 318          {
 319   1          IAP_CONTR = 0x80;                           //使能IAP
 320   1          IAP_TPS = 40;                               //设置等待参数12MHz
 321   1          IAP_CMD = 2;                                //设置IAP写命令
 322   1          IAP_ADDRL = addr;                           //设置IAP低地址
 323   1          IAP_ADDRH = addr >> 8;                      //设置IAP高地址
 324   1          IAP_DATA = dat;                             //写IAP数据
 325   1          IAP_TRIG = 0x5a;                            //写触发命令(0x5a)
 326   1          IAP_TRIG = 0xa5;                            //写触发命令(0xa5)
 327   1          _nop_();
 328   1          IapIdle();                                  //关闭IAP功能
 329   1      }
 330          
 331          void IapErase(int addr)
 332          {
 333   1          IAP_CONTR = 0x80;                           //使能IAP
 334   1          IAP_TPS = 40;                               //设置等待参数12MHz
 335   1          IAP_CMD = 3;                                //设置IAP擦除命令
 336   1          IAP_ADDRL = addr;                           //设置IAP低地址
 337   1          IAP_ADDRH = addr >> 8;                      //设置IAP高地址
 338   1          IAP_TRIG = 0x5a;                            //写触发命令(0x5a)
 339   1          IAP_TRIG = 0xa5;                            //写触发命令(0xa5)
 340   1          _nop_();                                    //
 341   1          IapIdle();                                  //关闭IAP功能
 342   1      }
 343          
 344          
 345          
 346          void Exxwrite(int addr, uint dat)
 347          {
 348   1          addr=addr*2;
 349   1          IapProgram(addr,dat/256);
 350   1          IapProgram(addr+1,dat%256);
 351   1      }
 352          
 353          int ExxRead(int addr)
 354          {
 355   1          uint dat1,dat2;
 356   1          int dat3;
 357   1          addr=addr*2;
 358   1          dat1=IapRead(addr);
 359   1          // printf("ExxRead[%d]\n",dat1);
 360   1      
 361   1          
 362   1          dat2=IapRead(addr+1);
 363   1          // printf("ExxRead[%d]\n",dat2);
 364   1          dat3=dat1*256+dat2;
 365   1          // printf("ExxRead[%d]\n",dat3);
C51 COMPILER V9.00   MAIN                                                                  09/23/2023 15:29:01 PAGE 7   

 366   1          return dat3; 
 367   1      }
 368          
 369          void readbuf()
 370          {
 371   1          int i;
 372   1          int zhi;
 373   1          int dizhi=Iapid;
 374   1          zhi=ExxRead(dizhi);
 375   1          if(zhi==55)
 376   1          {
 377   2              printf("has init\n");
 378   2          }
 379   1          else
 380   1          {
 381   2              printf("not init\n");
 382   2              HoldingReg[4]=600;
 383   2              writebuf();
 384   2          }
 385   1          for ( i = 0; i < len_HoldingReg; i++)
 386   1          {
 387   2              dizhi=dizhi+1;
 388   2              HoldingReg[i]=ExxRead(dizhi);
 389   2              // delay_ms(4);
 390   2              zhi=HoldingReg[i];
 391   2              printf("HoldingReg[%d]-[%d]\n",i,zhi);
 392   2          }
 393   1      }
 394          void initbuf()
 395          {
 396   1          int i;
 397   1          for ( i = 0; i < len_HoldingReg; i++)
 398   1          {
 399   2              HoldingReg[i]=0;
 400   2          }
 401   1          // readbuf();
 402   1      }
 403          
 404          void getzhiandchange()
 405          {
 406   1          int weizhi,zhi;
 407   1          Alltongxininfo2 get={0};
 408   1          pop22(&get);
 409   1          if(get.weizhi==0)
 410   1          {
 411   2              return ;
 412   2          }
 413   1          weizhi=get.weizhi;
 414   1          zhi=get.zhi;
 415   1          printf("getzhiandchange weizhi[%d] zhi[%d]\n",weizhi,zhi);
 416   1          if(weizhi<len_HoldingReg)
 417   1          {
 418   2              HoldingReg[weizhi]=zhi;
 419   2          }
 420   1          if(weizhi==4 || weizhi==2)
 421   1              {
 422   2                      deanyan();
 423   2              }
 424   1          // if(IsbuffcheckFailed())
 425   1          // {
 426   1          //     // printf("xiugaidata begin\n");
 427   1          //     delay_mszhi=0;
C51 COMPILER V9.00   MAIN                                                                  09/23/2023 15:29:01 PAGE 8   

 428   1          //     buffchecktongbu();
 429   1          //     writebuf();
 430   1          //     // printf("HoldingReg[4] %d",HoldingReg[4]);
 431   1          //     // printf("xiugaidata end %d\n",delay_mszhi);
 432   1          //     readbuf();
 433   1          // }
 434   1      }
 435          
 436          //sbit out2 = P3 ^ 2;
 437          int isokser(char *str)
 438          {
 439   1          int len,contentlen;
 440   1          int index1,index2;
 441   1          char *str1,*str2,*str3;
 442   1          len=strlen(str);
 443   1          
 444   1          if(len<8)
 445   1          {
 446   2              return 0;
 447   2          }
 448   1          // 检查字符串是否以 "set:" 开头
 449   1          if (strncmp(str, "set:", 4) != 0) {
 450   2              return 0; // 不以 "set:" 开头，返回假
 451   2          }
 452   1          str1=str + len - 3;
 453   1          if (strncmp(str1, "end", 3) != 0) {
 454   2              return 0; // 不以 "end" 结尾，返回假
 455   2          }
 456   1          contentlen=(len-4-3)/2;
 457   1         
 458   1          if (strncmp(str+4,str+contentlen+4,contentlen) != 0) {
 459   2              return 0; // 不以 "end" 结尾，返回假
 460   2          }
 461   1          
 462   1          return 1;
 463   1      }
*** WARNING C280 IN LINE 440 OF MAIN.C: 'index1': unreferenced local variable
*** WARNING C280 IN LINE 440 OF MAIN.C: 'index2': unreferenced local variable
*** WARNING C280 IN LINE 441 OF MAIN.C: 'str2': unreferenced local variable
*** WARNING C280 IN LINE 441 OF MAIN.C: 'str3': unreferenced local variable
 464          void main()                                                    
 465          {
 466   1              io_inint();
 467   1          UartInit();
 468   1              Uart23Init();
 469   1              Timer0Init();
 470   1              Uart4Init();
 471   1              P_SW2 = 0x80;
 472   1          I2CCFG = 0xe0;                              //使能I2C主机模式
 473   1          I2CMSST = 0x00;
 474   1              EA = 1;
 475   1              out2=1;
 476   1              Modbus_ClearBuff();
 477   1          deanyan();
 478   1              delay_ms(100);
 479   1          printf("system restart\n");
 480   1          initbuf();
 481   1          buffchecktongbu();
 482   1          printf("system init ok1");
 483   1          HoldingReg[2]=1;
 484   1          com1clearbuf();
 485   1          P3M0 = 0x06;
C51 COMPILER V9.00   MAIN                                                                  09/23/2023 15:29:01 PAGE 9   

 486   1          P3M1 = 0x08;
 487   1          out2 = 1;
 488   1          while (1)
 489   1              {
 490   2              delay_ms(5);
 491   2              // isokser("set:4-30;4-30;end");
 492   2              if(weishu3>0)
 493   2              {
 494   3                  delay_ms(2);
 495   3                  dealchuankou();     
 496   3              }
 497   2              getzhiandchange();
 498   2              }
 499   1      } 
 500          int delay_mszhi;         
 501          uint time,lv_bo;
 502          void delay_ms(int m)
 503          {
 504   1          delay_mszhi=0;
 505   1          while (delay_mszhi<=m*2)
 506   1          {
 507   2              
 508   2          }
 509   1      }
 510          void Timer0() interrupt 1
 511          {
 512   1          // chuankou1time();
 513   1              delay_mszhi++;
 514   1          timereport++;
 515   1      }
 516          void UARTInterrupt(void) interrupt 4
 517          {
 518   1              unsigned char ans;
 519   1              if (RI)
 520   1              {
 521   2                      RI = 0;
 522   2                      ans=SBUF;
 523   2              chuankou1put(ans);
 524   2              }
 525   1              else
 526   1              {
 527   2                      TI = 0;
 528   2              }
 529   1              if (TI) //发送中断..
 530   1              {
 531   2                      TI = 0;
 532   2              }
 533   1      }
 534          
 535          void uart2(void ) interrupt 8 
 536          {
 537   1        if (S2CON & S2RI)
 538   1              {
 539   2                      S2CON &= ~S2RI;         
 540   2                      temp2 = S2BUF;
 541   2              }
 542   1        if (S2CON & S2TI)
 543   1          {
 544   2                              //y1=0;
 545   2              S2CON &= ~S2TI;         //清除S2TI位
 546   2              busy2 = 0;               //清忙标志
 547   2          }  
C51 COMPILER V9.00   MAIN                                                                  09/23/2023 15:29:01 PAGE 10  

 548   1      }
 549          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2772    ----
   CONSTANT SIZE    =    280    ----
   XDATA SIZE       =    107     191
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  4 WARNING(S),  0 ERROR(S)
