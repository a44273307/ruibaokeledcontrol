C251 COMPILER V5.60.0,  APP_Lamp                                                           15/09/23  14:22:52  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE APP_Lamp
OBJECT MODULE PLACED IN .\list\APP_Lamp.obj
COMPILER INVOKED BY: D:\keilc251\C251\BIN\C251.EXE ..\App\src\APP_Lamp.c LARGE INTR2 ROM(HUGE) BROWSE INCDIR(..\Driver\i
                    -nc;..\User;..\App\inc) DEBUG PRINT(.\list\APP_Lamp.lst) TABS(2) OBJECT(.\list\APP_Lamp.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          
   13          #include  "APP_Lamp.h"
*** WARNING C317 IN LINE 89 OF ..\App\inc\APP_Lamp.h: attempt to redefine macro 'WHITE'
*** WARNING C317 IN LINE 91 OF ..\App\inc\APP_Lamp.h: attempt to redefine macro 'BLUE'
*** WARNING C317 IN LINE 95 OF ..\App\inc\APP_Lamp.h: attempt to redefine macro 'RED'
*** WARNING C317 IN LINE 97 OF ..\App\inc\APP_Lamp.h: attempt to redefine macro 'GREEN'
   14          #include  "STC32G_GPIO.h"
   15          #include  "STC32G_SPI.h"
   16          #include  "STC32G_Delay.h"
   17          #include "lcdfont.h"
   18          /***************  功能说明  ****************
   19          
   20          程序使用P6口来演示跑马灯，输出低驱动。
   21          
   22          下载时, 选择时钟 24MHz (可以在配置文件"config.h"中修改).
   23          
   24          ******************************************/
   25          
   26          
   27          //========================================================================
   28          //                               本地常量声明 
   29          //========================================================================
   30          
   31          u8 code ledNum[]={0x01,0x02,0x04,0x08,0x10,0x20,0x40,0x80};
   32          
   33          //========================================================================
   34          //                               本地变量声明
   35          //========================================================================
   36          
   37          
   38          //========================================================================
   39          //                               本地函数声明
   40          //========================================================================
   41          
   42          
   43          //========================================================================
   44          //                            外部函数和变量声明
   45          //========================================================================
   46          
   47          
   48          unsigned char SPI_RW(unsigned char byte)
   49          {
   50   1        unsigned char bit_ctr;
   51   1        
   52   1        for(bit_ctr=0;bit_ctr<8;bit_ctr++) // 输出8位
   53   1        {
   54   2          LCD_SCK=0;
C251 COMPILER V5.60.0,  APP_Lamp                                                           15/09/23  14:22:52  PAGE 2   

   55   2          LCD_MOSI=(byte&0x80); // MSB TO MOSI
   56   2          byte=(byte<<1); // shift next bit to MSB
   57   2          LCD_SCK=1;
   58   2          byte|=LCD_MISO;         // capture current MISO bit
   59   2        }
   60   1        return byte;
   61   1      }
   62          
   63          void LCD_CD_DATA(unsigned char val)
   64          {
   65   1        LCD_CS=0;
   66   1        LCD_CD=1;
   67   1        SPI_RW(val);
   68   1        LCD_CS=1;
   69   1      }
   70          
   71          void LCD_CD_REG(unsigned char reg)
   72          {
   73   1        LCD_CS=0;
   74   1        LCD_CD=0;
   75   1        SPI_RW(reg);
   76   1        LCD_CS=1;
   77   1      }
   78          
   79          void LCD_Init()
   80          {
   81   1      //  P0=0;
   82   1      //  P2=0;
   83   1        LCD_RESET=0;
   84   1        delay_ms(1);
   85   1        LCD_RESET=0;
   86   1        delay_ms(10);
   87   1        LCD_RESET=1;
   88   1        delay_ms(120);
   89   1      
   90   1      //************* Start Initial Sequence **********//
   91   1        LCD_CD_REG(0xCF);  
   92   1        LCD_CD_DATA(0x00); 
   93   1        LCD_CD_DATA(0xC1); 
   94   1        LCD_CD_DATA(0X30); 
   95   1        LCD_CD_REG(0xED);  
   96   1        LCD_CD_DATA(0x64); 
   97   1        LCD_CD_DATA(0x03); 
   98   1        LCD_CD_DATA(0X12); 
   99   1        LCD_CD_DATA(0X81); 
  100   1        LCD_CD_REG(0xE8);  
  101   1        LCD_CD_DATA(0x85); 
  102   1        LCD_CD_DATA(0x10); 
  103   1        LCD_CD_DATA(0x7A); 
  104   1        LCD_CD_REG(0xCB);  
  105   1        LCD_CD_DATA(0x39); 
  106   1        LCD_CD_DATA(0x2C); 
  107   1        LCD_CD_DATA(0x00); 
  108   1        LCD_CD_DATA(0x34); 
  109   1        LCD_CD_DATA(0x02); 
  110   1        LCD_CD_REG(0xF7);  
  111   1        LCD_CD_DATA(0x20); 
  112   1        LCD_CD_REG(0xEA);  
  113   1        LCD_CD_DATA(0x00); 
  114   1        LCD_CD_DATA(0x00); 
  115   1        LCD_CD_REG(0xC0);    //Power control 
  116   1        LCD_CD_DATA(0x1B);   //VRH[5:0] 
  117   1        LCD_CD_REG(0xC1);    //Power control 
  118   1        LCD_CD_DATA(0x01);   //SAP[2:0];BT[3:0] 
  119   1        LCD_CD_REG(0xC5);    //VCM control 
  120   1        LCD_CD_DATA(0x30);   //3F
C251 COMPILER V5.60.0,  APP_Lamp                                                           15/09/23  14:22:52  PAGE 3   

  121   1        LCD_CD_DATA(0x30);   //3C
  122   1        LCD_CD_REG(0xC7);    //VCM control2 
  123   1        LCD_CD_DATA(0XB7); 
  124   1        LCD_CD_REG(0x36);    // Memory Access Control 
  125   1        LCD_CD_DATA(0x0C+0x80+0x20); 
  126   1        LCD_CD_REG(0x3A);   
  127   1        LCD_CD_DATA(0x55); 
  128   1        LCD_CD_REG(0xB1);   
  129   1        LCD_CD_DATA(0x00);   
  130   1        LCD_CD_DATA(0x1A); 
  131   1        LCD_CD_REG(0xB6);    // Display Function Control 
  132   1        LCD_CD_DATA(0x0A); 
  133   1        LCD_CD_DATA(0xA2); 
  134   1        LCD_CD_REG(0xF2);    // 3Gamma Function Disable 
  135   1        LCD_CD_DATA(0x00); 
  136   1        LCD_CD_REG(0x26);    //Gamma curve selected 
  137   1        LCD_CD_DATA(0x01); 
  138   1        LCD_CD_REG(0xE0);    //Set Gamma 
  139   1        LCD_CD_DATA(0x0F); 
  140   1        LCD_CD_DATA(0x2A); 
  141   1        LCD_CD_DATA(0x28); 
  142   1        LCD_CD_DATA(0x08); 
  143   1        LCD_CD_DATA(0x0E); 
  144   1        LCD_CD_DATA(0x08); 
  145   1        LCD_CD_DATA(0x54); 
  146   1        LCD_CD_DATA(0XA9); 
  147   1        LCD_CD_DATA(0x43); 
  148   1        LCD_CD_DATA(0x0A); 
  149   1        LCD_CD_DATA(0x0F); 
  150   1        LCD_CD_DATA(0x00); 
  151   1        LCD_CD_DATA(0x00); 
  152   1        LCD_CD_DATA(0x00); 
  153   1        LCD_CD_DATA(0x00);     
  154   1        LCD_CD_REG(0XE1);    //Set Gamma 
  155   1        LCD_CD_DATA(0x00); 
  156   1        LCD_CD_DATA(0x15); 
  157   1        LCD_CD_DATA(0x17); 
  158   1        LCD_CD_DATA(0x07); 
  159   1        LCD_CD_DATA(0x11); 
  160   1        LCD_CD_DATA(0x06); 
  161   1        LCD_CD_DATA(0x2B); 
  162   1        LCD_CD_DATA(0x56); 
  163   1        LCD_CD_DATA(0x3C); 
  164   1        LCD_CD_DATA(0x05); 
  165   1        LCD_CD_DATA(0x10); 
  166   1        LCD_CD_DATA(0x0F); 
  167   1        LCD_CD_DATA(0x3F); 
  168   1        LCD_CD_DATA(0x3F); 
  169   1        LCD_CD_DATA(0x0F); 
  170   1        LCD_CD_REG(0x2B); 
  171   1        LCD_CD_DATA(0x00);
  172   1        LCD_CD_DATA(0x00);
  173   1        LCD_CD_DATA(0x01);
  174   1        LCD_CD_DATA(0x3f);
  175   1        LCD_CD_REG(0x2A); 
  176   1        LCD_CD_DATA(0x00);
  177   1        LCD_CD_DATA(0x00);
  178   1        LCD_CD_DATA(0x00);
  179   1        LCD_CD_DATA(0xef);   
  180   1        LCD_CD_REG(0x11); //Exit Sleep
  181   1        delay_ms(120);
  182   1        LCD_CD_REG(0x29); //display on    
  183   1      }
  184          
  185          void LCD_SetArea(unsigned int stx,unsigned int sty,unsigned int endx,unsigned int endy)
  186          {
C251 COMPILER V5.60.0,  APP_Lamp                                                           15/09/23  14:22:52  PAGE 4   

  187   1        LCD_CD_REG(0x2A);  
  188   1        LCD_CD_DATA(stx>>8);    
*** WARNING C188 IN LINE 188 OF ..\App\src\APP_Lamp.c: 'parameter 1': value truncated
  189   1        LCD_CD_DATA(stx&0xff);      
  190   1        LCD_CD_DATA(endx>>8); 
*** WARNING C188 IN LINE 190 OF ..\App\src\APP_Lamp.c: 'parameter 1': value truncated
  191   1        LCD_CD_DATA(endx&0xff); 
  192   1      
  193   1        LCD_CD_REG(0x2B);
  194   1        LCD_CD_DATA(sty>>8); 
*** WARNING C188 IN LINE 194 OF ..\App\src\APP_Lamp.c: 'parameter 1': value truncated
  195   1        LCD_CD_DATA(sty&0xff);  
  196   1        LCD_CD_DATA(endy>>8); 
*** WARNING C188 IN LINE 196 OF ..\App\src\APP_Lamp.c: 'parameter 1': value truncated
  197   1        LCD_CD_DATA(endy&0xff); 
  198   1      }
  199          
  200          void LcdWirteColorData(unsigned int color)
  201          {
  202   1        LCD_CS=0;
  203   1        LCD_CD=1;
  204   1        SPI_RW((color>>8));
*** WARNING C188 IN LINE 204 OF ..\App\src\APP_Lamp.c: 'parameter 1': value truncated
  205   1        SPI_RW(color);
*** WARNING C188 IN LINE 205 OF ..\App\src\APP_Lamp.c: 'parameter 1': value truncated
  206   1        LCD_CS=1;
  207   1      }
  208          
  209          void LCD_Clear(unsigned int color)
  210          {  
  211   1        unsigned int i,j;
  212   1      
  213   1        LCD_SetArea(0,0,239,319);
  214   1          LCD_CD_REG(0x2C);
  215   1        for(i=0;i<320;i++)
  216   1        {
  217   2          for(j=0;j<240;j++)
  218   2          {
  219   3            LcdWirteColorData(color);
  220   3          }
  221   2        }
  222   1      }
  223          
  224          
  225          
  226          
  227          //========================================================================
  228          // 函数: Lamp_init
  229          // 描述: 用户初始化程序.
  230          // 参数: None.
  231          // 返回: None.
  232          // 版本: V1.0, 2020-09-28
  233          //========================================================================
  234          void Lamp_init(void)
  235          {
  236   1        LCD_Init();
  237   1      
  238   1      }
  239          //========================================================================
  240          // 函数: Sample_Lamp
  241          // 描述: 用户应用程序.
  242          // 参数: None.
  243          // 返回: None.
  244          // 版本: V1.0, 2020-09-23
  245          //========================================================================
  246          void Sample_Lamp(void)
C251 COMPILER V5.60.0,  APP_Lamp                                                           15/09/23  14:22:52  PAGE 5   

  247          {
  248   1        // P33 = !P33;
  249   1        // P35 = !P35;
  250   1        // P37 = !P37;
  251   1        // P42 = !P42;
  252   1        LCD_Clear(RED);
  253   1        LCD_Clear(GREEN);
  254   1        LCD_LED = !LCD_LED;
  255   1      }
  256          
  257          
  258          
  259          
  260          /******************************************************************************
  261                函数说明：LCD写入命令
  262                入口数据：dat 写入的命令
  263                返回值：  无
  264          ******************************************************************************/
  265          void LCD_WR_REG(u8 dat)
  266          {
  267   1        LCD_CD_REG(dat);
  268   1      }
  269          
  270          /******************************************************************************
  271                函数说明：设置起始和结束地址
  272                入口数据：x1,x2 设置列的起始和结束地址
  273                          y1,y2 设置行的起始和结束地址
  274                返回值：  无
  275          ******************************************************************************/
  276          void LCD_Address_Set(u16 x1,u16 y1,u16 x2,u16 y2)
  277          {
  278   1        LCD_SetArea(x1,y1,x2,y2);
  279   1      }
  280          /******************************************************************************
  281                函数说明：LCD写入数据
  282                入口数据：dat 写入的数据
  283                返回值：  无
  284          ******************************************************************************/
  285          void LCD_WR_DATA8(u8 dat)
  286          {
  287   1        LCD_CD_DATA(dat);
  288   1      }
  289          /******************************************************************************
  290                函数说明：LCD写入数据
  291                入口数据：dat 写入的数据
  292                返回值：  无
  293          ******************************************************************************/
  294          void LCD_WR_DATA(u16 dat)
  295          {
  296   1        LcdWirteColorData(dat);
  297   1      }
  298          /******************************************************************************
  299                函数说明：在指定区域填充颜色
  300                入口数据：xsta,ysta   起始坐标
  301                          xend,yend   终止坐标
  302                          color       要填充的颜色
  303                返回值：  无
  304          ******************************************************************************/
  305          void LCD_Fill(u16 xsta,u16 ysta,u16 xend,u16 yend,u16 color)
  306          {          
  307   1        u16 i,j; 
  308   1        LCD_Address_Set(xsta,ysta,xend-1,yend-1);//设置显示范围
  309   1        for(i=ysta;i<yend;i++)
  310   1        {                               
  311   2          for(j=xsta;j<xend;j++)
  312   2          {
C251 COMPILER V5.60.0,  APP_Lamp                                                           15/09/23  14:22:52  PAGE 6   

  313   3            LCD_WR_DATA(color);
  314   3          }
  315   2        }                   
  316   1      }
  317          
  318          /******************************************************************************
  319                函数说明：在指定位置画点
  320                入口数据：x,y 画点坐标
  321                          color 点的颜色
  322                返回值：  无
  323          ******************************************************************************/
  324          void LCD_DrawPoint(u16 x,u16 y,u16 color)
  325          {
  326   1        LCD_Address_Set(x,y,x,y);//设置光标位置 
  327   1        LCD_WR_DATA(color);
  328   1      } 
  329          
  330          
  331          /******************************************************************************
  332                函数说明：画线
  333                入口数据：x1,y1   起始坐标
  334                          x2,y2   终止坐标
  335                          color   线的颜色
  336                返回值：  无
  337          ******************************************************************************/
  338          void LCD_DrawLine(u16 x1,u16 y1,u16 x2,u16 y2,u16 color)
  339          {
  340   1        u16 t; 
  341   1        int xerr=0,yerr=0,delta_x,delta_y,distance;
  342   1        int incx,incy,uRow,uCol;
  343   1        delta_x=x2-x1; //计算坐标增量 
  344   1        delta_y=y2-y1;
  345   1        uRow=x1;//画线起点坐标
  346   1        uCol=y1;
  347   1        if(delta_x>0)incx=1; //设置单步方向 
  348   1        else if (delta_x==0)incx=0;//垂直线 
  349   1        else {incx=-1;delta_x=-delta_x;}
  350   1        if(delta_y>0)incy=1;
  351   1        else if (delta_y==0)incy=0;//水平线 
  352   1        else {incy=-1;delta_y=-delta_y;}
  353   1        if(delta_x>delta_y)distance=delta_x; //选取基本增量坐标轴 
  354   1        else distance=delta_y;
  355   1        for(t=0;t<distance+1;t++)
  356   1        {
  357   2          LCD_DrawPoint(uRow,uCol,color);//画点
  358   2          xerr+=delta_x;
  359   2          yerr+=delta_y;
  360   2          if(xerr>distance)
  361   2          {
  362   3            xerr-=distance;
  363   3            uRow+=incx;
  364   3          }
  365   2          if(yerr>distance)
  366   2          {
  367   3            yerr-=distance;
  368   3            uCol+=incy;
  369   3          }
  370   2        }
  371   1      }
  372          
  373          
  374          /******************************************************************************
  375                函数说明：画矩形
  376                入口数据：x1,y1   起始坐标
  377                          x2,y2   终止坐标
  378                          color   矩形的颜色
C251 COMPILER V5.60.0,  APP_Lamp                                                           15/09/23  14:22:52  PAGE 7   

  379                返回值：  无
  380          ******************************************************************************/
  381          void LCD_DrawRectangle(u16 x1, u16 y1, u16 x2, u16 y2,u16 color)
  382          {
  383   1        LCD_DrawLine(x1,y1,x2,y1,color);
  384   1        LCD_DrawLine(x1,y1,x1,y2,color);
  385   1        LCD_DrawLine(x1,y2,x2,y2,color);
  386   1        LCD_DrawLine(x2,y1,x2,y2,color);
  387   1      }
  388          
  389          
  390          /******************************************************************************
  391                函数说明：画圆
  392                入口数据：x0,y0   圆心坐标
  393                          r       半径
  394                          color   圆的颜色
  395                返回值：  无
  396          ******************************************************************************/
  397          void Draw_Circle(u16 x0,u16 y0,u8 r,u16 color)
  398          {
  399   1        int a,b;
  400   1        a=0;b=r;    
  401   1        while(a<=b)
  402   1        {
  403   2          LCD_DrawPoint(x0-b,y0-a,color);             //3           
  404   2          LCD_DrawPoint(x0+b,y0-a,color);             //0           
  405   2          LCD_DrawPoint(x0-a,y0+b,color);             //1                
  406   2          LCD_DrawPoint(x0-a,y0-b,color);             //2             
  407   2          LCD_DrawPoint(x0+b,y0+a,color);             //4               
  408   2          LCD_DrawPoint(x0+a,y0-b,color);             //5
  409   2          LCD_DrawPoint(x0+a,y0+b,color);             //6 
  410   2          LCD_DrawPoint(x0-b,y0+a,color);             //7
  411   2          a++;
  412   2          if((a*a+b*b)>(r*r))//判断要画的点是否过远
  413   2          {
  414   3            b--;
  415   3          }
  416   2        }
  417   1      }
  418          
  419          
  420          
  421          
  422          /******************************************************************************
  423                函数说明：显示单个字符
  424                入口数据：x,y显示坐标
  425                          num 要显示的字符
  426                          fc 字的颜色
  427                          bc 字的背景色
  428                          sizey 字号
  429                          mode:  0非叠加模式  1叠加模式
  430                返回值：  无
  431          ******************************************************************************/
  432          void LCD_ShowChar(u16 x,u16 y,u8 num,u16 fc,u16 bc,u8 sizey,u8 mode)
  433          {
  434   1        u8 temp,sizex,t,m=0;
  435   1        u16 i,TypefaceNum;//一个字符所占字节大小
  436   1        u16 x0=x;
  437   1        sizex=sizey/2;
  438   1        TypefaceNum=(sizex/8+((sizex%8)?1:0))*sizey;
  439   1        num=num-' ';    //得到偏移后的值
  440   1        LCD_SetArea(x,y,x+sizex-1,y+sizey-1);  //设置光标位置 
  441   1        LCD_CD_REG(0x2C);
  442   1        for(i=0;i<TypefaceNum;i++)
  443   1        { 
  444   2          if(sizey==12)temp=ascii_1206[num][i];          //调用6x12字体
C251 COMPILER V5.60.0,  APP_Lamp                                                           15/09/23  14:22:52  PAGE 8   

  445   2          else if(sizey==16)temp=ascii_1608[num][i];     //调用8x16字体
  446   2          else if(sizey==24)temp=ascii_2412[num][i];     //调用12x24字体
  447   2          else if(sizey==32)temp=ascii_3216[num][i];     //调用16x32字体
  448   2          else return;
  449   2          for(t=0;t<8;t++)
  450   2          {
  451   3            if(!mode)//非叠加模式
  452   3            {
  453   4              if(temp&(0x01<<t))LCD_WR_DATA(fc);
  454   4              else LCD_WR_DATA(bc);
  455   4              m++;
  456   4              if(m%sizex==0)
  457   4              {
  458   5                m=0;
  459   5                break;
  460   5              }
  461   4            }
  462   3            else//叠加模式
  463   3            {
  464   4              if(temp&(0x01<<t))LCD_DrawPoint(x,y,fc);//画一个点
  465   4              x++;
  466   4              if((x-x0)==sizex)
  467   4              {
  468   5                x=x0;
  469   5                y++;
  470   5                break;
  471   5              }
  472   4            }
  473   3          }
  474   2        }         
  475   1      }
  476          
  477          
  478          /******************************************************************************
  479                函数说明：显示字符串
  480                入口数据：x,y显示坐标
  481                          *p 要显示的字符串
  482                          fc 字的颜色
  483                          bc 字的背景色
  484                          sizey 字号
  485                          mode:  0非叠加模式  1叠加模式
  486                返回值：  无
  487          ******************************************************************************/
  488          void LCD_ShowString(u16 x,u16 y,const u8 *p,u16 fc,u16 bc,u8 sizey,u8 mode)
  489          {         
  490   1        while(*p!='\0')
  491   1        {       
  492   2          LCD_ShowChar(x,y,*p,fc,bc,sizey,mode);
  493   2          x+=sizey/2;
  494   2          p++;
  495   2        }  
  496   1      }
  497          
  498          
  499          /******************************************************************************
  500                函数说明：显示数字
  501                入口数据：m底数，n指数
  502                返回值：  无
  503          ******************************************************************************/
  504          u32 mypow(u8 m,u8 n)
  505          {
  506   1        u32 result=1;  
  507   1        while(n--)result*=m;
  508   1        return result;
  509   1      }
  510          
C251 COMPILER V5.60.0,  APP_Lamp                                                           15/09/23  14:22:52  PAGE 9   

  511          
  512          /******************************************************************************
  513                函数说明：显示整数变量
  514                入口数据：x,y显示坐标
  515                          num 要显示整数变量
  516                          len 要显示的位数
  517                          fc 字的颜色
  518                          bc 字的背景色
  519                          sizey 字号
  520                返回值：  无
  521          ******************************************************************************/
  522          void LCD_ShowIntNum(u16 x,u16 y,u16 num,u8 len,u16 fc,u16 bc,u8 sizey)
  523          {           
  524   1        u8 t,temp;
  525   1        u8 enshow=0;
  526   1        u8 sizex=sizey/2;
  527   1        for(t=0;t<len;t++)
  528   1        {
  529   2          temp=(num/mypow(10,len-t-1))%10;
*** WARNING C188 IN LINE 529 OF ..\App\src\APP_Lamp.c: 'parameter 2': value truncated
  530   2          if(enshow==0&&t<(len-1))
  531   2          {
  532   3            if(temp==0)
  533   3            {
  534   4              LCD_ShowChar(x+t*sizex,y,' ',fc,bc,sizey,0);
  535   4              continue;
  536   4            }else enshow=1; 
  537   3             
  538   3          }
  539   2          LCD_ShowChar(x+t*sizex,y,temp+48,fc,bc,sizey,0);
*** WARNING C188 IN LINE 539 OF ..\App\src\APP_Lamp.c: 'parameter 3': value truncated
  540   2        }
  541   1      } 
  542          
  543          
  544          /******************************************************************************
  545                函数说明：显示两位小数变量
  546                入口数据：x,y显示坐标
  547                          num 要显示小数变量
  548                          len 要显示的位数
  549                          fc 字的颜色
  550                          bc 字的背景色
  551                          sizey 字号
  552                返回值：  无
  553          ******************************************************************************/
  554          void LCD_ShowFloatNum1(u16 x,u16 y,float num,u8 len,u16 fc,u16 bc,u8 sizey)
  555          {           
  556   1        u8 t,temp,sizex;
  557   1        u16 num1;
  558   1        sizex=sizey/2;
  559   1        num1=num*100;
  560   1        for(t=0;t<len;t++)
  561   1        {
  562   2          temp=(num1/mypow(10,len-t-1))%10;
*** WARNING C188 IN LINE 562 OF ..\App\src\APP_Lamp.c: 'parameter 2': value truncated
  563   2          if(t==(len-2))
  564   2          {
  565   3            LCD_ShowChar(x+(len-2)*sizex,y,'.',fc,bc,sizey,0);
  566   3            t++;
  567   3            len+=1;
  568   3          }
  569   2          LCD_ShowChar(x+t*sizex,y,temp+48,fc,bc,sizey,0);
*** WARNING C188 IN LINE 569 OF ..\App\src\APP_Lamp.c: 'parameter 3': value truncated
  570   2        }
  571   1      }
  572          
C251 COMPILER V5.60.0,  APP_Lamp                                                           15/09/23  14:22:52  PAGE 10  

  573          
  574          /******************************************************************************
  575                函数说明：显示图片
  576                入口数据：x,y起点坐标
  577                          length 图片长度
  578                          width  图片宽度
  579                          pic[]  图片数组    
  580                返回值：  无
  581          ******************************************************************************/
  582          void LCD_ShowPicture(u16 x,u16 y,u16 length,u16 width,const u8 pic[])
  583          {
  584   1        u16 i,j;
  585   1        u32 k=0;
  586   1        LCD_Address_Set(x,y,x+length-1,y+width-1);
  587   1        LCD_CD_REG(0x2C);
  588   1        for(i=0;i<length;i++)
  589   1        {
  590   2          for(j=0;j<width;j++)
  591   2          {
  592   3            LCD_WR_DATA8(pic[k*2]);
  593   3            LCD_WR_DATA8(pic[k*2+1]);
  594   3            k++;
  595   3          }
  596   2        }     
  597   1      }
  598          
  599          


Module Information          Static   Overlayable
------------------------------------------------
  code size            =     13308     ------
  ecode size           =      3107     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------        109
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  14 WARNING(S),  0 ERROR(S)
