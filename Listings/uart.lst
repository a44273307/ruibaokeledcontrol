C251 COMPILER V5.60.0,  uart                                                               19/07/23  01:47:18  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE uart
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: C:\Keil_v5\C251\BIN\C251.EXE uart.c LARGE BROWSE DEBUG PRINT(.\Listings\uart.lst) TABS(2) OBJECT(.\
                    -Objects\uart.obj) 

stmt  level    source

    1          /************************************************************************************
    2          Copyright,  LCE STUDIO  
    3          程序名称：串口通信（晶振频率18.432MHz）  
    4          功能说明: 串口1和串口3初始化,字符发送与字符串发送函数,波特率9600bps
    5          程序版本：1.0 （2014/06）
    6          阿里旺旺：rob1983
    7          淘宝店铺：http://shop67639654.taobao.com 
    8          ************************************************************************************/ 
    9          
   10          #include <string.h>
   11          #include "stc32g.h"
   12          #include "config.h"
   13          
   14          
   15          #include <stdio.h>
   16          #include <stdarg.h>
   17          #include <stdio.h>
   18          
   19          #include <stdlib.h>
   20          
   21          
   22          #include "uart.h"
*** WARNING C317 IN LINE 24 OF uart.h: attempt to redefine macro 'MAIN_Fosc'
   23          //#include "main.h"
   24           bit busy4;
   25           bit busy2;
   26           bit busy3;
   27          //bit busy4;
   28          //void SendData(unsigned char ch);
   29          //void SendString(char *s);
   30          //void UartInit(void);
   31          //void U3SendData(unsigned char ch);
   32          //void U3SendString(char *s);
   33          //void U2SendData(unsigned char ch);
   34          //void U2SendString(char *s);
   35          
   36          
   37          /*----------------------------
   38          定时器0初始化
   39          ----------------------------*/
   40          
   41          void Timer0Init(void) // 0.5ms @24.000MHz
   42          {
   43   1      
   44   1        AUXR |= 0x80; // 定时器时钟1T模式
   45   1        TMOD &= 0xF0; // 设置定时器模式
   46   1        TL0 = 0x40;   // 设置定时初始值
   47   1        TH0 = 0xA2;   // 设置定时初始值
   48   1        TF0 = 0;    // 清除TF0标志
   49   1        TR0 = 1;    // 定时器0开始计时
   50   1      
   51   1        TF0 = 0; // 清除TF0标志
   52   1        PT0 = 1;
   53   1        ET0 = 1;
   54   1        TR0 = 1; // 定时器0开始计时
   55   1        EA = 1;
   56   1      }
   57          /*----------------------------
C251 COMPILER V5.60.0,  uart                                                               19/07/23  01:47:18  PAGE 2   

   58          串口初始化
   59          ----------------------------*/
   60          
   61          void UartInit(void)   //115200@24.000MHz
   62          {
   63   1        SCON = 0x50;    //8位数据,可变波特率
   64   1        AUXR |= 0x40;   //定时器1时钟为Fosc,即1T
   65   1        AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
   66   1        TMOD &= 0x0F;   //设定定时器1为16位自动重装方式
   67   1        TL1 = 0xCC;     //设置定时初始值
   68   1        TH1 = 0xFF;     //设置定时初始值
   69   1        ET1 = 0;    //禁止定时器1中断
   70   1        TR1 = 1;    //启动定时器1
   71   1        ES=1;
   72   1        //  ES=0;//关闭串口0中断
   73   1        EA=1;
   74   1      }
   75          void Uart23Init(void)   //115200@24.000MHz
   76          {
   77   1        S3CON = 0x10;   //8位数据,可变波特率
   78   1        S3CON &= 0xBF;    //串口3选择定时器2为波特率发生器
   79   1        S2CON = 0x50;   //8位数据,可变波特率
   80   1        AUXR |= 0x04;   //定时器2时钟为Fosc,即1T
   81   1        T2L = 0xCC;     //设置定时初始值
   82   1        T2H = 0xFF;     //设置定时初始值
   83   1        AUXR |= 0x10;   //启动定时器2
   84   1        IE2 |= 0x01;                 //使能串口2中断
   85   1        IE2 |= 0x08;                 //使能串口3中断
   86   1        EA=1;
   87   1        P_SW2 = (P_SW2 & ~2) | (0 & 0x02);  //切换IO
   88   1        //  //IE2&=0xFE关闭串口2
   89   1      //  IE2&=0xF7;  //关闭串口3
   90   1      }
   91          void Uart4Init(void)    //9600bps@24.000MHz .串口4
   92          {
   93   1        S4CON = 0x10;   //8位数据,可变波特率
   94   1        S4CON |= 0x40;    //串口4选择定时器4为波特率发生器
   95   1        T4T3M |= 0x20;    //定时器4时钟为Fosc,即1T
   96   1        T4L = 0xCC;   //设定定时初值
   97   1        T4H = 0xFF;   //设定定时初值
   98   1        T4T3M |= 0x80;    //启动定时器4 
   99   1        S4CON &= ~(1<<5); //禁止多机通讯方式
  100   1        S4CON &= ~(1<<7); // 8位数据, 1位起始位, 1位停止位, 无校验
  101   1        IE2   |=  (1<<4); //允许中断
  102   1        //IE2&=0xEF关闭串口4
  103   1        S4CON |=  (1<<4); //允许接收
  104   1      //  P_SW2 &= ~4;    //切换到 P0.2 P0.3
  105   1      }
  106          
  107          
  108          /*----------------------------
  109          通过串口1发送串口数据
  110          ----------------------------*/
  111          //void SendData(unsigned char ch)
  112          //{
  113          //    TI     =   0;  //清零串口发送完成中断请求标志
  114          //    SBUF   =   ch;
  115          //    while(TI ==0); //等待发送完成
  116          //}
  117          
  118          //void sendbyte1(unsigned char ch)
  119          //{
  120          //    TI     =   0;  //清零串口发送完成中断请求标志
  121          //    SBUF   =   ch;
  122          //    while(TI ==0); //等待发送完成
  123          //}
C251 COMPILER V5.60.0,  uart                                                               19/07/23  01:47:18  PAGE 3   

  124          
  125          
  126          void sendbyte1(unsigned char ch)
  127          {
  128   1        int i;
  129   1        // EA=0;
  130   1          TI     =   0;  //清零串口发送完成中断请求标志
  131   1          SBUF   =   ch;
  132   1          while(TI ==0) //等待发送完成
  133   1        {
  134   2          for(i=0;i<2000; i++){
  135   3            if( TI) break;
  136   3          }
  137   2          break;
  138   2        }
  139   1        EA=1;
  140   1      }
  141          
  142          /*----------------------------
  143          通过串口2发送串口数据
  144          ----------------------------*/
  145          void sendbyte2(unsigned char ch)
  146          {
  147   1         while (busy2);               //等待前面的数据发送完成                      //获取校验位P (PSW.
  148   1          busy2 = 1;
  149   1          S2BUF = ch;                //写数据到UART2数据寄存器
  150   1      }
  151          
  152          
  153          
  154          
  155          /*----------------------------
  156          通过串口3发送串口数据
  157          ----------------------------*/
  158          void sendbyte3(unsigned char ch)
  159          {
  160   1          while (busy3);               //等待前面的数据发送完成
  161   1          busy3 = 1;
  162   1          S3BUF = ch;                //写数据到UART2数据寄存器
  163   1      }
  164          void print3(char *p)
  165          {
  166   1        while (*p != '\0')
  167   1        {
  168   2          sendbyte3(*p);
  169   2          p++;
  170   2        }
  171   1      }
  172          
  173          /*----------------------------
  174          通过串口4发送串口数据
  175          ----------------------------*/
  176          void sendbyte4(unsigned char ch)
  177          {
  178   1          while (busy4);               //等待前面的数据发送完成
  179   1        busy4 = 1;
  180   1          S4BUF = ch;                //写数据到UART2数据寄存器
  181   1      }
  182          void print4(char *p)
  183          {
  184   1        while (*p != '\0')
  185   1        {
  186   2          sendbyte4(*p);
  187   2          p++;
  188   2        }
  189   1      }
C251 COMPILER V5.60.0,  uart                                                               19/07/23  01:47:18  PAGE 4   

  190          void print4len(unsigned char *p,int len)
  191          {
  192   1        int i;
  193   1        for(i=0;i<len;i++)
  194   1        {
  195   2          sendbyte4(*p);
  196   2          p++;
  197   2        }
  198   1      }
  199          int debug=1;
  200          void PrintString(const char *puts)
  201          {
  202   1        if (debug==0)
  203   1        {
  204   2          return ;
  205   2        }
  206   1        
  207   1          for (; *puts != 0;  puts++)  sendbyte1(*puts);  //遇到停止符0结束
  208   1      }
  209          
  210          void Delay1us()   //@24.000MHz
  211          {
  212   1        unsigned char i;
  213   1      
  214   1        _nop_();
  215   1        _nop_();
  216   1        i = 57;
  217   1        while (--i);
  218   1      }
  219          char putchar(char dat)
  220          {
  221   1        // Delay1us();
  222   1        sendbyte1(dat);
  223   1        return (dat);
  224   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       338     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =         2          4
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =         3     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         7     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
