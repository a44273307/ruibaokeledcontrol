C251 COMPILER V5.60.0,  main                                                               02/08/23  19:55:00  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE main
OBJECT MODULE PLACED IN .\list\main.obj
COMPILER INVOKED BY: D:\keilc251\C251\BIN\C251.EXE ..\User\main.c LARGE INTR2 ROM(HUGE) BROWSE INCDIR(..\Driver\inc;..\U
                    -ser;..\App\inc) DEBUG PRINT(.\list\main.lst) TABS(2) OBJECT(.\list\main.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCMCU.com --------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- QQ:  800003751 -------------------------------------------------*/
   10          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   11          /*---------------------------------------------------------------------*/
   12          #include <string.h>
   13          #include "stc32g.h"
   14          #include "config.h"
*** WARNING C317 IN LINE 39 OF ..\User\type_def.h: attempt to redefine macro 'NULL'
   15          
   16          
   17          #include <stdio.h>
   18          #include <stdarg.h>
   19          #include <stdio.h>
   20          
   21          #include <stdlib.h>
   22          #include  "Task.h"
   23          #include  "System_init.h"
   24          #include  "APP.h"
*** WARNING C317 IN LINE 89 OF \瑞宝科\new2\Synthetical_Programme\App\inc\APP_Lamp.h: attempt to redefine macro 'WHITE'
*** WARNING C317 IN LINE 91 OF \瑞宝科\new2\Synthetical_Programme\App\inc\APP_Lamp.h: attempt to redefine macro 'BLUE'
*** WARNING C317 IN LINE 95 OF \瑞宝科\new2\Synthetical_Programme\App\inc\APP_Lamp.h: attempt to redefine macro 'RED'
*** WARNING C317 IN LINE 97 OF \瑞宝科\new2\Synthetical_Programme\App\inc\APP_Lamp.h: attempt to redefine macro 'GREEN'
   25          
   26          #include  "config.h"
   27          #include  "STC32G_GPIO.h"
   28          #include  "STC32G_UART.h"
   29          #include  "STC32G_NVIC.h"
   30          #include  "STC32G_Delay.h"
   31          #include  "STC32G_Switch.h"
   32          #include "uart.h"
*** WARNING C317 IN LINE 17 OF ..\User\uart.h: attempt to redefine macro 'CLR_TI4'
*** WARNING C317 IN LINE 18 OF ..\User\uart.h: attempt to redefine macro 'CLR_RI4'
   33          #include "tongxin2.h"
   34          #include "tongxin.h"
   35          #include "STC32G_EEPROM.h"
   36          
   37          void showhenxiang();
   38          void ledopen(int weizhi);
   39          
   40          int keyon = 0;
   41          int keylow = 1;
   42          int keyok = 2;
   43          int keyup = 3;
   44          
   45          int nowzhi = 0;
   46          int setzhi = 0;
   47          sbit X0 = P4 ^ 0;
   48          sbit X3 = P3 ^ 4;
   49          sbit X2 = P3 ^ 6;
   50          sbit X1 = P4 ^ 1;
   51          
C251 COMPILER V5.60.0,  main                                                               02/08/23  19:55:00  PAGE 2   

   52          sbit LED1 = P4 ^ 2;
   53          sbit LED2 = P3 ^ 7;
   54          
   55          sbit LED3 = P3 ^ 5;
   56          sbit LED0 = P3 ^ 3;
   57          
   58          
   59          sbit Y1 =  P4 ^ 2;
   60          sbit Y2 =  P3 ^ 7;
   61          
   62          sbit Y3 =  P3 ^ 5;
   63          sbit Y0 =  P3 ^ 3;
   64          
   65          
   66          
   67          char flagsystemrun = 0;
   68          #define maxsetzhi 2047
   69          
   70          
   71          void  GPIO_confibase(void)
   72          {
   73   1      //  P2_MODE_IO_PU( GPIO_Pin_3 | GPIO_Pin_4 );   //P2 设置为准双向口
   74   1      //  P2_MODE_OUT_PP(GPIO_Pin_2|GPIO_Pin_5|GPIO_Pin_6|GPIO_Pin_7);
   75   1          P2_MODE_IO_PU(GPIO_Pin_All);  
   76   1        
   77   1        P3_MODE_OUT_PP(GPIO_Pin_3|GPIO_Pin_5|GPIO_Pin_7);
   78   1        P3_MODE_IN_HIZ(GPIO_Pin_4|GPIO_Pin_6);
   79   1        
   80   1        P4_MODE_OUT_PP(GPIO_Pin_2|GPIO_Pin_3);
   81   1        P4_MODE_IN_HIZ(GPIO_Pin_0|GPIO_Pin_1);
   82   1      }
   83          
   84          void  GPIO_configcom3(void)
   85          {
   86   1        GPIO_InitTypeDef  GPIO_InitStructure;   //结构定义
   87   1      
   88   1        GPIO_InitStructure.Pin  = GPIO_Pin_0 | GPIO_Pin_1;    //指定要初始化的IO, GPIO_Pin_0 ~ GPIO_Pin_7
   89   1        GPIO_InitStructure.Mode = GPIO_PullUp;  //指定IO的输入或输出方式,GPIO_PullUp,GPIO_HighZ,GPIO_OUT_OD,GPIO_
             -OUT_PP
   90   1        GPIO_Inilize(GPIO_P5,&GPIO_InitStructure);  //初始化
   91   1      }
   92          
   93          /***************  串口初始化函数 *****************/
   94          void  UART_configcom3(void)
   95          {
   96   1        COMx_InitDefine   COMx_InitStructure;         //结构定义
   97   1      
   98   1        COMx_InitStructure.UART_Mode      = UART_8bit_BRTx; //模式, UART_ShiftRight,UART_8bit_BRTx,UART_9bit,UAR
             -T_9bit_BRTx
   99   1        COMx_InitStructure.UART_BRT_Use   = BRT_Timer3;     //选择波特率发生器, BRT_Timer3, BRT_Timer2 (注意: 串口
             -2固定使用BRT_Timer2)
  100   1        COMx_InitStructure.UART_BaudRate  = 115200ul;     //波特率, 一般 110 ~ 115200
  101   1        COMx_InitStructure.UART_RxEnable  = ENABLE;       //接收允许,   ENABLE或DISABLE
  102   1        UART_Configuration(UART3, &COMx_InitStructure);   //初始化串口1 UART1,UART2,UART3,UART4
  103   1        NVIC_UART3_Init(ENABLE,Priority_1);   //中断使能, ENABLE/DISABLE; 优先级(低到高) Priority_0,Priority_1,Pr
             -iority_2,Priority_3
  104   1      
  105   1        UART3_SW(UART3_SW_P50_P51);   //UART3_SW_P00_P01,UART3_SW_P50_P51
  106   1      }
  107          
  108          
  109          static int timepush=0;
  110          void dealorder()
  111          {
  112   1        char out[30]={0};
  113   1        Alltongxininfo get;
C251 COMPILER V5.60.0,  main                                                               02/08/23  19:55:00  PAGE 3   

  114   1        if(timepush>45)
  115   1        {
  116   2          timepush=0;
  117   2          pop2(&get);
  118   2          if(get.weizhi==4)
  119   2          {
  120   3            get.zhi=get.zhi;
*** WARNING C138 IN LINE 120 OF ..\User\main.c: expression with possibly no effect
  121   3          }
  122   2          sprintf(out,"set:%d-%d;end",get.weizhi,get.zhi);
  123   2          print3(out);
  124   2        }
  125   1      }
  126          void time0() interrupt 1
  127          {
  128   1        if(!empty())
*** WARNING C140 IN LINE 128 OF ..\User\main.c: 'empty' undefined; assuming 'extern int empty()'
  129   1        {
  130   2          timepush++;
  131   2        }
  132   1        chuankou1time();
  133   1      }
  134          
  135          void Uart3() interrupt 17
  136          {
  137   1        char temp3; 
  138   1          if (S3CON & S3RI)
  139   1          {
  140   2              S3CON &= ~S3RI; //??S3RI?
  141   2          temp3 = S3BUF;
  142   2          chuankou1put(temp3);
  143   2          }
  144   1          if (S3CON & S3TI)
  145   1          {
  146   2              S3CON &= ~S3TI; // 清除S3TI位
  147   2              busy3 = 0;      // 清忙标志
  148   2          }
  149   1      }
  150          
  151          char flasetzhichange = 0;
  152          // 是否能够设置值的状态。。。  ok键按下 即可。。。
  153          char flagcanset = 0;
  154          void setdianliu(int zhi)
  155          {
  156   1        push(4,zhi);
  157   1      }
  158          
  159          
  160          
  161          void setzhichange(int a)
  162          {
  163   1        if (flagcanset == 0)
  164   1          return;
  165   1        if (setzhi + a < 0)
  166   1        {
  167   2          setzhi = 0;
  168   2          // 0的情况也发，保证能够被收到。。
  169   2          flasetzhichange = 1;
  170   2          setdianliu(setzhi);
  171   2          // printf("setdianliu%d\r\n",setzhi);
  172   2          return;
  173   2        }
  174   1        if (setzhi + a > maxsetzhi)
  175   1        {
  176   2          setzhi = maxsetzhi;
  177   2          return;
C251 COMPILER V5.60.0,  main                                                               02/08/23  19:55:00  PAGE 4   

  178   2        }
  179   1        setzhi = setzhi + a;
  180   1        flasetzhichange = 1;
  181   1        setdianliu(setzhi);
  182   1      }
  183          int writedizhi(int dizhi, int zhi)
  184          {
  185   1        push(dizhi,zhi);
  186   1      }
  187          void writebuf();
  188          void keydown(int i) // 按键按下的处理、、、
  189          {
  190   1        printf("key down%d",i);
  191   1        if (i == keyon)
  192   1        {
  193   2          LED0 = ~LED0;
  194   2          // 结束时候关灯， 开机键盘开灯。。。
  195   2          if (flagsystemrun == 0)
  196   2          {
  197   3            flagsystemrun = 1;
  198   3            LCD_ShowString(0, 0, "Circle TAC", WHITE, BLACK, 32, 0);
  199   3            showhenxiang();
  200   3            writedizhi(2,1);
  201   3            delay_ms(30);
  202   3            writedizhi(2,1);
  203   3            delay_ms(30);
  204   3            setdianliu(setzhi);
  205   3            delay_ms(10);
  206   3          }
  207   2          else
  208   2          {
  209   3            writedizhi(2,0);
  210   3            delay_ms(100);
  211   3            dealorder();
  212   3            writedizhi(2,0);
  213   3            delay_ms(300);
  214   3            dealorder();
  215   3            IAP_CONTR = 0x60;
  216   3          }
  217   2        }
  218   1        if (flagcanset)
  219   1        {
  220   2          ledopen(i);
  221   2        }
  222   1        if (i == keylow)
  223   1        {
  224   2          setzhichange(-1);
  225   2          return;
  226   2        }
  227   1        if (i == keyup)
  228   1        {
  229   2          setzhichange(1);
  230   2          return;
  231   2        }
  232   1        if (i == keyok)
  233   1        {
  234   2          if(flagcanset==1)
  235   2          {
  236   3            writebuf();
  237   3          }
  238   2          flagcanset = 1 - flagcanset;
  239   2          LED2 = ~LED2;
  240   2        }
  241   1      }
  242          int keyshi = 3;
  243          // 按键连续按下多少次的操作。。
C251 COMPILER V5.60.0,  main                                                               02/08/23  19:55:00  PAGE 5   

  244          int setbizhi(int times)
  245          {
  246   1        if (times < 15 * keyshi)
  247   1        {
  248   2          return 10;
  249   2        }
  250   1        if (times < 50 * keyshi)
  251   1        {
  252   2          return 50;
  253   2        }
  254   1        return 100;
  255   1      }
  256          // 2ms 一次的话，那300ms一次ok的吧。。
  257          void dolongtimes(int i, int times)
  258          {
  259   1        int xielv;
  260   1        times = times - 150;
  261   1        if (times < 0)
  262   1        {
  263   2          return;
  264   2        }
  265   1        xielv = setbizhi(times);
  266   1        if (times % keyshi != 0)
  267   1        {
  268   2          return;
  269   2        }
  270   1        if (i == keylow)
  271   1        {
  272   2          setzhichange(-xielv);
  273   2          return;
  274   2        }
  275   1        if (i == keyup)
  276   1        {
  277   2          setzhichange(xielv);
  278   2          return;
  279   2        }
  280   1      }
  281          void yout_set(char weizhi, char zhi)
  282          {
  283   1        if (weizhi == 0)
  284   1          Y0 = zhi;
  285   1        if (weizhi == 1)
  286   1          Y1 = zhi;
  287   1        if (weizhi == 2)
  288   1          Y2 = zhi;
  289   1        if (weizhi == 3)
  290   1          Y3 = zhi;
  291   1      }
  292          void ledclose(int weizhi)
  293          {
  294   1        if (weizhi == keyon || weizhi == keyok)
  295   1        {
  296   2          return;
  297   2        }
  298   1        yout_set(weizhi, 1);
*** WARNING C188 IN LINE 298 OF ..\User\main.c: 'parameter 1': value truncated
  299   1      }
  300          void ledopen(int weizhi)
  301          {
  302   1        if (weizhi == keyon || weizhi == keyok)
  303   1        {
  304   2          return;
  305   2        }
  306   1        yout_set(weizhi, 0);
*** WARNING C188 IN LINE 306 OF ..\User\main.c: 'parameter 1': value truncated
  307   1      }
C251 COMPILER V5.60.0,  main                                                               02/08/23  19:55:00  PAGE 6   

  308          
  309          
  310          
  311          
  312          
  313          char xin[30] = {0};
  314          void shurulvbo(void)
  315          {
  316   1        static u8 keybuf[40] = {
  317   1          0xFF,
  318   1          0xFF,
  319   1          0xFF,
  320   1          0xFF,
  321   1          0xFF,
  322   1          0xFF,
  323   1          0xFF,
  324   1          0xFF,
  325   1          0xFF,
  326   1          0xFF,
  327   1          0xFF,
  328   1          0xFF,
  329   1          0xFF,
  330   1          0xFF,
  331   1          0xFF,
  332   1          0xFF,
  333   1          0xFF,
  334   1          0xFF,
  335   1          0xFF,
  336   1          0xFF,
  337   1          0xFF,
  338   1          0xFF,
  339   1          0xFF,
  340   1          0xFF,
  341   1          0xFF,
  342   1          0xFF,
  343   1          0xFF,
  344   1          0xFF,
  345   1          0xFF,
  346   1          0xFF,
  347   1          0xFF,
  348   1          0xFF,
  349   1          0xFF,
  350   1          0xFF,
  351   1          0xFF,
  352   1          0xFF,
  353   1          0xFF,
  354   1          0xFF,
  355   1          0xFF,
  356   1          0xFF,
  357   1        }; // 矩阵按键扫描缓冲区 8ms
  358   1        unsigned char i;
  359   1        i = X0;
  360   1        keybuf[0] = (keybuf[0] << 1) | i;
  361   1        i = X1;
  362   1        keybuf[1] = (keybuf[1] << 1) | i;
  363   1        i = X2;
  364   1        keybuf[2] = (keybuf[2] << 1) | i;
  365   1        i = X3;
  366   1        keybuf[3] = (keybuf[3] << 1) | i;
  367   1        for (i = 0; i < 10; i++) // 3按键，所以循环3次
  368   1        {
  369   2          if ((keybuf[i] & 0xFF) == 0x00)
  370   2          {
  371   3            xin[i] = 0;
  372   3          }
  373   2          else if ((keybuf[i] & 0xFF) == 0xFF)
C251 COMPILER V5.60.0,  main                                                               02/08/23  19:55:00  PAGE 7   

  374   2          { // 连续3次扫描值为1，即1*8ms内都是弹起状态时，可认为按键已稳定的弹起
  375   3            xin[i] = 1;
  376   3          }
  377   2        }
  378   1      }
  379          void keyallchuli()
  380          {
  381   1        int i;
  382   1        static char flag[10] = {0};   // 标志记录
  383   1        static int dowmtimes[10] = {0}; // 标志记录
  384   1        for (i = 0; i < 6; i++)
  385   1        {
  386   2          if (xin[i] == 0)
  387   2          {
  388   3            if (flag[i] == 0) // 代表按键第一次按下。。。
  389   3            {
  390   4              flag[i] = 1;
  391   4              keydown(i);
  392   4            }
  393   3      
  394   3            dowmtimes[i]++;
  395   3            dolongtimes(i, dowmtimes[i]);
  396   3          }
  397   2          else
  398   2          {
  399   3            flag[i] = 0;
  400   3            dowmtimes[i] = 0;
  401   3            ledclose(i);
  402   3          }
  403   2        }
  404   1      }
  405          
  406          int tmp = 203; // 温度值
  407          void shownwendu()
  408          {
  409   1        char dataxx[40];
  410   1        // 记得复位
  411   1        if (flagsystemrun == 0)
  412   1        {
  413   2          return;
  414   2        }
  415   1        sprintf(dataxx, "TMP:%3d.%01d  ", tmp / 10, tmp % 10);
  416   1        LCD_ShowString(0, 80, dataxx, WHITE, BLACK, 32, 0);
  417   1      }
  418          
  419          void shownow()
  420          {
  421   1        // char dataxx[40];
  422   1        // sprintf(dataxx,"NOW:%05d",nowzhi);
  423   1        // LCD_ShowString(0,40,dataxx,WHITE,BLACK,32,0);
  424   1      }
  425          
  426          #define maxjindu 16
  427          #define qidian 0
  428          
  429          void pingmuclear()
  430          {
  431   1        char dataxx[60] = {0};
  432   1        static int runflag2 = 0;
  433   1        int i;
  434   1        if (runflag2 == 1)
  435   1        {
  436   2          return;
  437   2        }
  438   1        runflag2 = 1;
  439   1        // LCD_Clear(BLACK);
C251 COMPILER V5.60.0,  main                                                               02/08/23  19:55:00  PAGE 8   

  440   1      
  441   1        sprintf(dataxx, "                     ", 1);
  442   1        for (i = 0; i < 10; i++)
  443   1        {
  444   2          LCD_ShowString(0, i * 30, dataxx, WHITE, BLACK, 32, 0);
  445   2          // delay_ms(1);
  446   2        }
  447   1      }
  448          void showhenxiang()
  449          {
  450   1        int i;
  451   1        char dataxx[60] = {0};
  452   1        static int runflag = 0;
  453   1        if (runflag == 1)
  454   1        {
  455   2          return;
  456   2        }
  457   1        runflag = 1;
  458   1      
  459   1        for (i = 0; i < maxjindu; i++)
  460   1        {
  461   2          dataxx[i] = '-';
  462   2        }
  463   1      
  464   1        LCD_ShowString(qidian, 140, dataxx, WHITE, BLACK, 32, 0);
  465   1        LCD_ShowString(qidian, 140 + 40, dataxx, WHITE, BLACK, 32, 0);
  466   1        LCD_ShowString(qidian, 140 + 40 + 30, "0            12bit          2047", WHITE, BLACK, 16, 0);
  467   1      }
  468          
  469          void showjindtiao()
  470          {
  471   1        int i;
  472   1        char dataxx[60] = {0};
  473   1        int jindu;
  474   1        jindu = setzhi * maxjindu / maxsetzhi;
  475   1        for (i = 0; i < maxjindu; i++)
  476   1        {
  477   2          if (i < jindu)
  478   2            dataxx[i] = '>';
  479   2          else
  480   2            dataxx[i] = ' ';
  481   2        }
  482   1        showhenxiang();
  483   1        LCD_ShowString(qidian, 160, dataxx, WHITE, BLACK, 32, 0);
  484   1      }
  485          void showsetzhi()
  486          {
  487   1        char dataxx[40];
  488   1        sprintf(dataxx, "SET:        %04d    ", setzhi);
  489   1        LCD_ShowString(0, 120, dataxx, WHITE, BLACK, 32, 0);
  490   1        showjindtiao();
  491   1      }
  492          void showdata()
  493          {
  494   1        // 记得复位
  495   1        if (flagsystemrun == 0)
  496   1        {
  497   2          return;
  498   2        }
  499   1        shownow();
  500   1        showsetzhi();
  501   1      }
  502          
  503          void showfen(int error)
  504          {
  505   1        if(error==11)
C251 COMPILER V5.60.0,  main                                                               02/08/23  19:55:00  PAGE 9   

  506   1          LCD_ShowString(0, 40,"ERROR FOR FAN", WHITE, BLACK, 32, 0);
  507   1        if(error==12)
  508   1          LCD_ShowString(0, 40,"ERROR FOR TMP", WHITE, BLACK, 32, 0);
  509   1      
  510   1      }
  511          
  512          void getzhiandchange()
  513          {
  514   1          int weizhi,zhi;
  515   1          Alltongxininfo2 get={0};
  516   1          pop22(&get);
  517   1          if(get.weizhi==0)
  518   1          {
  519   2              return ;
  520   2          }
  521   1          weizhi=get.weizhi;
  522   1          zhi=get.zhi;
  523   1          printf("getzhiandchange weizhi[%d] zhi[%d]\n",weizhi,zhi);
  524   1        if( weizhi== 6 )
  525   1        {
  526   2          tmp=zhi;
  527   2        }
  528   1        showfen(weizhi);
  529   1      
  530   1      }
  531          void readbuf();
  532          void mainrun()
  533          {
  534   1        int rumtimes = 0;
  535   1        LED0 = ~LED0;
  536   1        readbuf();
  537   1        writedizhi(2,0);
  538   1        writedizhi(4,0);
  539   1        //keydown(0);
  540   1        while (1)
  541   1        {
  542   2          delay_ms2(1);
  543   2          shurulvbo();
  544   2          keyallchuli(); 
  545   2          dealorder();
  546   2          dealchuankou();//处理中控板过来的的数据
  547   2          getzhiandchange();//对数据进行处理。。。
  548   2          if (flasetzhichange == 1)
  549   2          {
  550   3            flasetzhichange = 0;
  551   3            showdata();
  552   3            rumtimes = 0;
  553   3          }
  554   2          rumtimes++;
  555   2          if (rumtimes == 15000)
  556   2            showdata();
  557   2          if (rumtimes == 20000)
  558   2          {
  559   3            shownwendu();
  560   3            rumtimes = 0;
  561   3          }
  562   2          
  563   2      
  564   2            
  565   2            
  566   2          
  567   2        }
  568   1      }
  569          void UART1_ISR_Handler (void) interrupt UART1_VECTOR
  570          {
  571   1        if(RI)
C251 COMPILER V5.60.0,  main                                                               02/08/23  19:55:00  PAGE 10  

  572   1        {
  573   2          RI = 0;
  574   2          printf("rec init now");
  575   2          IAP_CONTR = 0x60;
  576   2        }
  577   1      
  578   1        if(TI)
  579   1        {
  580   2          TI = 0;
  581   2          
  582   2            
  583   2        }
  584   1      }
  585          //========================================================================
  586          // 函数: void main(void)
  587          // 描述: 主函数程序.
  588          // 参数: None.
  589          // 返回: None.
  590          // 版本: V1.0, 2012-10-22
  591          //========================================================================
  592          void test2()
  593          {
  594   1        SCON = 0x50;  // 8位数据,可变波特率
  595   1        AUXR |= 0x40; // 定时器时钟1T模式
  596   1        AUXR &= 0xFE; // 串口1选择定时器1为波特率发生器
  597   1        TMOD &= 0x0F; // 设置定时器模式
  598   1        TL1 = 0xCC;   // 设置定时初始值
  599   1        TH1 = 0xFF;   // 设置定时初始值
  600   1        ET1 = 0;    // 禁止定时器%d中断
  601   1        TR1 = 1;    // 定时器1开始计时
  602   1        ES = 1;
  603   1        EA = 1;
  604   1        P_SW1 = 0x00; // RXD/P3.0, TXD/P3.1
  605   1      
  606   1      }
  607          int errpromdizhi=0x000040;
  608          #define u8 unsigned char
  609          void writebuf()
  610          {
  611   1        u8 get[10];
  612   1        get[0]=55;
  613   1        get[1]=setzhi/100;
  614   1        get[2]=setzhi%100;
  615   1        EEPROM_SectorErase(errpromdizhi);
  616   1        EEPROM_write_n(errpromdizhi,get,3);
  617   1      }
  618          
  619          void readbuf()
  620          {
  621   1        u8 get[10];
  622   1      
  623   1          EEPROM_read_n(errpromdizhi,get,3);
  624   1          if(get[0]==55)
  625   1          {
  626   2              printf("has init\n");
  627   2          setzhi=get[1]*100+get[2];
  628   2          if(setzhi>=2047)
  629   2          {
  630   3            setzhi=2047;
  631   3          }
  632   2          if(setzhi<=0)
  633   2          {
  634   3            setzhi=0;
  635   3          }
  636   2          printf("has init %d-%d\n",get[1],get[2]);
  637   2          }
C251 COMPILER V5.60.0,  main                                                               02/08/23  19:55:00  PAGE 11  

  638   1          else
  639   1          {
  640   2              printf("not init\n");
  641   2          get[0]=55;
  642   2          setzhi=550;
  643   2            EEPROM_write_n(errpromdizhi,get,1);
  644   2          }
  645   1      }
  646          void main(void)
  647          {
  648   1        WTST = 0;   //设置程序指令延时参数，赋值为0可将CPU执行指令的速度设置为最快
  649   1        EAXSFR();   //扩展SFR(XFR)访问使能 
  650   1        CKCON = 0;      //提高访问XRAM速度
  651   1        
  652   1        XOSCCR = 0xc0;        //启动外部晶振
  653   1        while(!(XOSCCR&1));   //等待时钟稳定
  654   1        CLKDIV = 0x00;        //时钟不分频
  655   1        CLKSEL = 0x01;        //选择外部时钟    
  656   1        GPIO_confibase();
  657   1        SYS_Init();
  658   1        test2();
  659   1        GPIO_configcom3();
  660   1        Uart23Init();
  661   1        P4_MODE_IO_PU(GPIO_Pin_0|GPIO_Pin_1);
  662   1        P3_MODE_IO_PU(GPIO_Pin_6|GPIO_Pin_4);
  663   1        Timer0Init();
  664   1        delay_ms(50);
  665   1      
  666   1        LCD_Init();
  667   1        delay_ms(50);
  668   1        LCD_Fill(0, 0, 320, 240, BLACK);
  669   1        delay_ms(50);
  670   1        pingmuclear();
  671   1        delay_ms(50);
  672   1        mainrun();
  673   1        // LCD_Fill(0, 0, 320, 240, BLACK);
  674   1        
  675   1      }
*** WARNING C135 IN LINE 186 OF ..\User\main.c: 'writedizhi?': no return value
*** WARNING C135 IN LINE 186 OF ..\User\main.c: 'writedizhi?': no return value


Module Information          Static   Overlayable
------------------------------------------------
  code size            =        12     ------
  ecode size           =      2754     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =       127        333
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       678     ------
End of Module Information.


C251 COMPILATION COMPLETE.  13 WARNING(S),  0 ERROR(S)
