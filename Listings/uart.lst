C251 COMPILER V5.60.0,  uart                                                               28/07/23  09:42:49  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE uart
OBJECT MODULE PLACED IN .\Objects\uart.obj
COMPILER INVOKED BY: D:\keilc251\C251\BIN\C251.EXE uart.c XSMALL BROWSE DEBUG PRINT(.\Listings\uart.lst) TABS(2) OBJECT(
                    -.\Objects\uart.obj) 

stmt  level    source

    1          /************************************************************************************
    2          Copyright,  LCE STUDIO  
    3          程序名称：串口通信（晶振频率18.432MHz）  
    4          功能说明: 串口1和串口3初始化,字符发送与字符串发送函数,波特率9600bps
    5          程序版本：1.0 （2014/06）
    6          阿里旺旺：rob1983
    7          淘宝店铺：http://shop67639654.taobao.com 
    8          ************************************************************************************/ 
    9          
   10          #include <string.h>
   11          #include "stc32g.h"
   12          #include "config.h"
   13          
   14          
   15          #include <stdio.h>
   16          #include <stdarg.h>
   17          #include <stdio.h>
   18          
   19          #include <stdlib.h>
   20          
   21          
   22          #include "uart.h"
*** WARNING C317 IN LINE 24 OF uart.h: attempt to redefine macro 'MAIN_Fosc'
   23          //#include "main.h"
   24           bit busy4;
   25           bit busy2;
   26           bit busy3;
   27          //bit busy4;
   28          //void SendData(unsigned char ch);
   29          //void SendString(char *s);
   30          //void UartInit(void);
   31          //void U3SendData(unsigned char ch);
   32          //void U3SendString(char *s);
   33          //void U2SendData(unsigned char ch);
   34          //void U2SendString(char *s);
   35          
   36          
   37          /*----------------------------
   38          定时器0初始化
   39          ----------------------------*/
   40          
   41          void Timer0Init(void) // 0.5ms @24.000MHz
   42          {
   43   1      
   44   1        AUXR |= 0x80; // 定时器时钟1T模式
   45   1        TMOD &= 0xF0; // 设置定时器模式
   46   1        TL0 = 0x80;   // 设置定时初始值
   47   1        TH0 = 0x44;   // 设置定时初始值
   48   1        TF0 = 0;    // 清除TF0标志
   49   1        TR0 = 1;    // 定时器0开始计时
   50   1        TR0 = 1;    // 定时器0开始计时
   51   1        ET0 = 1;    // 使能定时器0中断
   52   1        PT0 = 1;
   53   1        EA = 1;
   54   1      }
   55          /*----------------------------
   56          串口初始化
   57          ----------------------------*/
C251 COMPILER V5.60.0,  uart                                                               28/07/23  09:42:49  PAGE 2   

   58          
   59          void UartInit(void)   //115200@24.000MHz
   60          {
   61   1        SCON = 0x50;  // 8位数据,可变波特率
   62   1        AUXR |= 0x40; // 定时器时钟1T模式
   63   1        AUXR &= 0xFE; // 串口1选择定时器1为波特率发生器
   64   1        TMOD &= 0x0F; // 设置定时器模式
   65   1        TL1 = 0xCC;   // 设置定时初始值
   66   1        TH1 = 0xFF;   // 设置定时初始值
   67   1        ET1 = 0;    // 禁止定时器%d中断
   68   1        TR1 = 1;    // 定时器1开始计时
   69   1        ES = 1;
   70   1        EA = 1;
   71   1        P_SW1 = 0x00; // RXD/P3.0, TXD/P3.1
   72   1      }
   73          void Uart23Init(void)   //115200@24.000MHz
   74          {
   75   1        S3CON = 0x10;   //8位数据,可变波特率
   76   1        S3CON &= 0xBF;    //串口3选择定时器2为波特率发生器
   77   1        S2CON = 0x50;   //8位数据,可变波特率
   78   1        AUXR |= 0x04;   //定时器2时钟为Fosc,即1T
   79   1        T2L = 0xCC;     //设置定时初始值
   80   1        T2H = 0xFF;     //设置定时初始值
   81   1        AUXR |= 0x10;   //启动定时器2
   82   1        // IE2 |= 0x01;                 //使能串口2中断
   83   1        IE2 |= 0x08;                 //使能串口3中断
   84   1        EA=1;
   85   1        S3_S=1;
   86   1        // P_SW2 = (P_SW2 & ~2) | (0 & 0x02); //切换IO
   87   1        //  //IE2&=0xFE关闭串口2
   88   1      //  IE2&=0xF7;  //关闭串口3
   89   1      }
   90          void Uart4Init(void)    //9600bps@24.000MHz .串口4
   91          {
   92   1        S4CON = 0x10;   //8位数据,可变波特率
   93   1        S4CON |= 0x40;    //串口4选择定时器4为波特率发生器
   94   1        T4T3M |= 0x20;    //定时器4时钟为Fosc,即1T
   95   1        T4L = 0xCC;   //设定定时初值
   96   1        T4H = 0xFF;   //设定定时初值
   97   1        T4T3M |= 0x80;    //启动定时器4 
   98   1        S4CON &= ~(1<<5); //禁止多机通讯方式
   99   1        S4CON &= ~(1<<7); // 8位数据, 1位起始位, 1位停止位, 无校验
  100   1        IE2   |=  (1<<4); //允许中断
  101   1        //IE2&=0xEF关闭串口4
  102   1        S4CON |=  (1<<4); //允许接收
  103   1      //  P_SW2 &= ~4;    //切换到 P0.2 P0.3
  104   1      }
  105          
  106          
  107          /*----------------------------
  108          通过串口1发送串口数据
  109          ----------------------------*/
  110          //void SendData(unsigned char ch)
  111          //{
  112          //    TI     =   0;  //清零串口发送完成中断请求标志
  113          //    SBUF   =   ch;
  114          //    while(TI ==0); //等待发送完成
  115          //}
  116          
  117          //void sendbyte1(unsigned char ch)
  118          //{
  119          //    TI     =   0;  //清零串口发送完成中断请求标志
  120          //    SBUF   =   ch;
  121          //    while(TI ==0); //等待发送完成
  122          //}
  123          
C251 COMPILER V5.60.0,  uart                                                               28/07/23  09:42:49  PAGE 3   

  124          
  125          void sendbyte1(unsigned char ch)
  126          {
  127   1        int i;
  128   1        // EA=0;
  129   1          TI     =   0;  //清零串口发送完成中断请求标志
  130   1          SBUF   =   ch;
  131   1          while(TI ==0) //等待发送完成
  132   1        {
  133   2          for(i=0;i<2000; i++){
  134   3            if( TI) break;
  135   3          }
  136   2          break;
  137   2        }
  138   1        EA=1;
  139   1      }
  140          
  141          /*----------------------------
  142          通过串口2发送串口数据
  143          ----------------------------*/
  144          void sendbyte2(unsigned char ch)
  145          {
  146   1         while (busy2);               //等待前面的数据发送完成                      //获取校验位P (PSW.
  147   1          busy2 = 1;
  148   1          S2BUF = ch;                //写数据到UART2数据寄存器
  149   1      }
  150          
  151          
  152          
  153          
  154          /*----------------------------
  155          通过串口3发送串口数据
  156          ----------------------------*/
  157          void sendbyte3(unsigned char ch)
  158          {
  159   1          while (busy3);               //等待前面的数据发送完成
  160   1          busy3 = 1;
  161   1          S3BUF = ch;                //写数据到UART2数据寄存器
  162   1      }
  163          void print3(char *p)
  164          {
  165   1        while (*p != '\0')
  166   1        {
  167   2          sendbyte3(*p);
  168   2          p++;
  169   2        }
  170   1      }
  171          
  172          /*----------------------------
  173          通过串口4发送串口数据
  174          ----------------------------*/
  175          void sendbyte4(unsigned char ch)
  176          {
  177   1          while (busy4);               //等待前面的数据发送完成
  178   1        busy4 = 1;
  179   1          S4BUF = ch;                //写数据到UART2数据寄存器
  180   1      }
  181          void print4(char *p)
  182          {
  183   1        while (*p != '\0')
  184   1        {
  185   2          sendbyte4(*p);
  186   2          p++;
  187   2        }
  188   1      }
  189          void print4len(unsigned char *p,int len)
C251 COMPILER V5.60.0,  uart                                                               28/07/23  09:42:49  PAGE 4   

  190          {
  191   1        int i;
  192   1        for(i=0;i<len;i++)
  193   1        {
  194   2          sendbyte4(*p);
  195   2          p++;
  196   2        }
  197   1      }
  198          int debug=1;
  199          void PrintString(const char *puts)
  200          {
  201   1        if (debug==0)
  202   1        {
  203   2          return ;
  204   2        }
  205   1        
  206   1          for (; *puts != 0;  puts++)  sendbyte1(*puts);  //遇到停止符0结束
  207   1      }
  208          
  209          void Delay1us()   //@24.000MHz
  210          {
  211   1        unsigned char i;
  212   1      
  213   1        _nop_();
  214   1        _nop_();
  215   1        i = 57;
  216   1        while (--i);
  217   1      }
  218          char putchar(char dat)
  219          {
  220   1        // Delay1us();
  221   1        sendbyte1(dat);
  222   1        return (dat);
  223   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       322     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =         2          4
  bit size             =         3     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =         6     ------
End of Module Information.


C251 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
