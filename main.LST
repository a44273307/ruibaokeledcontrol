C51 COMPILER V9.05   MAIN                                                                  06/27/2023 20:12:26 PAGE 1   


C51 COMPILER V9.05, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c LARGE BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /************************************************************************************
   2             
   3          程序名称： （晶振频率18.432MHz） 
   4          功能说明: 通过串口3发送“Everything is possible!”  
   5                    波特率9600，数据位8，奇偶效验无，停止位1，数据流控制无  
   6          ************************************************************************************/
   7          #include "stc15f2k60s2.h"           // 单片机STC15F2K60S2头文件,可以不再加入reg51.h
   8          #include <intrins.h>                                    // 加入此头文件后,可使用_nop_库函数
   9          #include "delay.h"                      // 延时函数头文件
  10          #include "uart.h"                               // 串行通信函数头文件
  11          #define  uint unsigned int  
  12          #define  uchar unsigned char    
  13          #include <stdio.h>
  14          #include <string.h>
  15          #include "MODBUS.h"
  16          
  17          #include <stdio.h>
  18          #include <string.h>
  19          #include <stdlib.h>
  20          int delay_mszhi;
  21          uint temp1,temp2,temp3,temp4;
  22          
  23          
  24          void io_inint()
  25          {
  26   1              P0M1 = 0;       P0M0 = 0;       //设置P0.0~P0.7为准双向口
  27   1        P1M0 = 0x00; // 设置P1.0为ADC口
  28   1        P1M1 = 0x80;
  29   1              P2M1 = 0;       P2M0 = 0;       //设置P2.0~P2.7为准双向口 
  30   1                  P3M0 = 0;
  31   1          P3M1 = 0;
  32   1              P4M1 = 0;       P4M0 = 0;       //设置P4.0~P4.7为准双向口
  33   1              // P5M1 = 0;    P5M0 = 0;       //设置P5.0~P5.7为准双向口
  34   1      
  35   1                  P5M0 = 0xff; P5M1 = 0x00; 
  36   1      
  37   1      }
  38          
  39          
  40          void delay_ms(int m);
  41          
  42          
  43          
  44          sbit out2=P3^2;
  45          
  46          extern void deanyan();
  47          sbit fen=P5^4;
  48          
  49          #define Iapid 0x0000
  50          uchar p1, a_a;
  51          void IapIdle()
  52          {
  53   1        IAP_CONTR = 0;    // ??±?IAP????
  54   1        IAP_CMD = 0;      // ?????ü???????÷
  55   1        IAP_TRIG = 0;     // ??????・??????÷
C51 COMPILER V9.05   MAIN                                                                  06/27/2023 20:12:26 PAGE 2   

  56   1        IAP_ADDRH = 0x80; // ?????・?è????・?IAP???ò
  57   1        IAP_ADDRL = 0;
  58   1      }
  59          
  60          uint8_t IapRead(int addr)
  61          {
  62   1        uint8_t dat;
  63   1      
  64   1        IAP_CONTR = 0x80;      // ????IAP
  65   1        IAP_TPS = 40;          // ?è??????????12MHz
  66   1        IAP_CMD = 1;           // ?è??IAP???ü??
  67   1        IAP_ADDRL = addr;      // ?è??IAP?????・
  68   1        IAP_ADDRH = addr >> 8; // ?è??IAP?????・
  69   1        IAP_TRIG = 0x5a;       // ????・??ü??(0x5a)
  70   1        IAP_TRIG = 0xa5;       // ????・??ü??(0xa5)
  71   1        _nop_();
  72   1        dat = IAP_DATA; // ??IAP????
  73   1        IapIdle();      // ??±?IAP????
  74   1      
  75   1        return dat;
  76   1      }
  77          
  78          void IapProgram(int addr, char dat)
  79          {
  80   1        IAP_CONTR = 0x80;      // ????IAP
  81   1        IAP_TPS = 40;          // ?è??????????12MHz
  82   1        IAP_CMD = 2;           // ?è??IAP???ü??
  83   1        IAP_ADDRL = addr;      // ?è??IAP?????・
  84   1        IAP_ADDRH = addr >> 8; // ?è??IAP?????・
  85   1        IAP_DATA = dat;        // ??IAP????
  86   1        IAP_TRIG = 0x5a;       // ????・??ü??(0x5a)
  87   1        IAP_TRIG = 0xa5;       // ????・??ü??(0xa5)
  88   1        _nop_();
  89   1        IapIdle(); // ??±?IAP????
  90   1      }
  91          
  92          void IapErase(int addr)
  93          {
  94   1        IAP_CONTR = 0x80;      // ????IAP
  95   1        IAP_TPS = 40;          // ?è??????????12MHz
  96   1        IAP_CMD = 3;           // ?è??IAP?????ü??
  97   1        IAP_ADDRL = addr;      // ?è??IAP?????・
  98   1        IAP_ADDRH = addr >> 8; // ?è??IAP?????・
  99   1        IAP_TRIG = 0x5a;       // ????・??ü??(0x5a)
 100   1        IAP_TRIG = 0xa5;       // ????・??ü??(0xa5)
 101   1        _nop_();               //
 102   1        IapIdle();             // ??±?IAP????
 103   1      }
 104          
 105          //
 106          void write_eeprom()
 107          {
 108   1        IapErase(Iapid); // ????????
 109   1        IapProgram(Iapid + 1, p1);
 110   1      
 111   1        IapProgram(Iapid + 60, a_a);
 112   1      }
 113          /******************°????????????ú????eeprom????????*****************/
 114          void read_eeprom()
 115          {
 116   1        uchar t, t1;
 117   1        p1 = IapRead(Iapid + 1);
C51 COMPILER V9.05   MAIN                                                                  06/27/2023 20:12:26 PAGE 3   

 118   1        a_a = IapRead(Iapid + 60);
 119   1      }
*** WARNING C280 IN LINE 116 OF main.c: 't': unreferenced local variable
*** WARNING C280 IN LINE 116 OF main.c: 't1': unreferenced local variable
 120          /**************???ú×??ìeeprom??????*****************/
 121          void init_eeprom()
 122          {
 123   1        read_eeprom();
 124   1        if (a_a != 6) // ?????????ú?????????ú????eeprom
 125   1        {
 126   2      
 127   2          p1 = 0;
 128   2          a_a = 6;
 129   2      
 130   2          write_eeprom(); // ±???????
 131   2        }
 132   1      }
 133          void Exxwrite(int addr, uint dat)
 134          {
 135   1          addr=addr*2;
 136   1          IapProgram(addr,dat/256);
 137   1          IapProgram(addr+1,dat%256);
 138   1      }
 139          uint ExxRead(int addr)
 140          {
 141   1          uint dat;
 142   1          addr=addr*2;
 143   1          dat=IapRead(addr);
 144   1          dat=dat*256;
 145   1          dat=dat+IapRead(addr+1);
 146   1          return dat;
 147   1      }
 148          void writebuf();
 149          void initbuf()
 150          {
 151   1          int i;
 152   1          int dizhi=Iapid+1;
 153   1          for ( i = 0; i < len_HoldingReg; i++)
 154   1          {
 155   2              HoldingReg[i]=0;
 156   2          }
 157   1          if(123!=ExxRead(dizhi))//没有初始化，初始化一次。。
 158   1          {
 159   2              Exxwrite(dizhi,123);
 160   2              writebuf();
 161   2          }
 162   1          for ( i = 0; i < len_HoldingReg; i++)
 163   1          {
 164   2              dizhi=dizhi+1;
 165   2              HoldingReg[i]=ExxRead(dizhi);
 166   2              if(0!=HoldingReg[i] && -1 !=HoldingReg[i])
 167   2              {
 168   3                  printf("HoldingReg[%d]-[%d]",i,HoldingReg[i]);
 169   3              }
 170   2          }
 171   1      }
 172          void writebuf()
 173          {
 174   1          int i;
 175   1          int dizhi=Iapid+1;
 176   1          for ( i = 0; i < len_HoldingReg; i++)
 177   1          {
C51 COMPILER V9.05   MAIN                                                                  06/27/2023 20:12:26 PAGE 4   

 178   2              dizhi=dizhi+1;
 179   2              Exxwrite(dizhi,HoldingReg[i]);
 180   2          }
 181   1      }
 182          // 比较值是否发生了变化。。
 183          uint16_t bufcheck[len_HoldingReg]={0};
 184          void buffchecktongbu()
 185          {
 186   1          int i;
 187   1          for ( i = 0; i < len_HoldingReg; i++)
 188   1          {
 189   2              bufcheck[i]=HoldingReg[i];
 190   2          }
 191   1      }
 192          int IsbuffcheckFailed()
 193          {
 194   1          int i;
 195   1          for ( i = 0; i < len_HoldingReg; i++)
 196   1          {
 197   2             if(bufcheck[i]!=HoldingReg[i])
 198   2             {
 199   3              return 1;
 200   3             }
 201   2          }
 202   1          return 0;
 203   1      }
 204          void main()                                                    
 205          {
 206   1              io_inint();
 207   1          UartInit();
 208   1              Uart23Init();
 209   1              Timer0Init();
 210   1              Uart4Init();
 211   1              P_SW2 = 0x80;
 212   1          I2CCFG = 0xe0;                              //使能I2C主机模式
 213   1          I2CMSST = 0x00;
 214   1              EA = 1;
 215   1              out2=1;
 216   1              Modbus_ClearBuff();
 217   1          deanyan();
 218   1              delay_ms(10);
 219   1          printf("system init ok");
 220   1          initbuf();
 221   1          buffchecktongbu();
 222   1          printf("system init ok1");
 223   1              while (1)
 224   1              {
 225   2                      if (recover == 1)
 226   2              {
 227   3                  delay_mszhi=0;
 228   3                              chuliguankji();
*** WARNING C206 IN LINE 228 OF main.c: 'chuliguankji': missing function-prototype
 229   3                  jishouokjisuan();
 230   3                  if(IsbuffcheckFailed())
 231   3                  {
 232   4                      
 233   4                      printf("xiugaidata begin");
 234   4                      buffchecktongbu();
 235   4                      deanyan();
 236   4                      writebuf();
 237   4                      printf("xiugaidata end %d",delay_mszhi);
 238   4                  }
C51 COMPILER V9.05   MAIN                                                                  06/27/2023 20:12:26 PAGE 5   

 239   3                  recover = 0;
 240   3              }
 241   2              }
 242   1      } 
 243          int delay_mszhi;         
 244          uint time,lv_bo;
 245          void delay_ms(int m)
 246          {
 247   1          delay_mszhi=0;
 248   1          while (delay_mszhi<=m*2)
 249   1          {
 250   2              
 251   2          }
 252   1      }
 253          void Timer0() interrupt 1
 254          {
 255   1              time1msjisuan();
 256   1              delay_mszhi++;
 257   1      }
 258          void UARTInterrupt(void) interrupt 4
 259          {
 260   1              unsigned char ans;
 261   1              if (RI)
 262   1              {
 263   2                      RI = 0;
 264   2                      ans=SBUF;
 265   2                      chuankou1jisuuan(ans);
 266   2              }
 267   1              else
 268   1              {
 269   2                      TI = 0;
 270   2              }
 271   1              if (TI) //发送中断..
 272   1              {
 273   2                      TI = 0;
 274   2              }
 275   1      }
 276          
 277          void uart2(void ) interrupt 8 
 278          {
 279   1        if (S2CON & S2RI)
 280   1              {
 281   2                      S2CON &= ~S2RI;         
 282   2                      temp2 = S2BUF;
 283   2              }
 284   1        if (S2CON & S2TI)
 285   1          {
 286   2                              //y1=0;
 287   2              S2CON &= ~S2TI;         //清除S2TI位
 288   2              busy2 = 0;               //清忙标志
 289   2          }  
 290   1      }
 291          
 292            
 293          
 294          
 295          void Uart3() interrupt 17 using 1
 296          {
 297   1          if (S3CON & S3RI)
 298   1          {
 299   2              S3CON &= ~S3RI;         //??S3RI?
 300   2              temp3 = S3BUF;
C51 COMPILER V9.05   MAIN                                                                  06/27/2023 20:12:26 PAGE 6   

 301   2                                      
 302   2         }
 303   1      if (S3CON & S3TI)
 304   1          {
 305   2              S3CON &= ~S3TI;         //清除S3TI位
 306   2              busy3 = 0;               //清忙标志
 307   2          }
 308   1      }
 309          
 310          void Uart4() interrupt 18 
 311          {
 312   1          if (S4CON & S4RI)
 313   1          {
 314   2              S4CON &= ~S4RI;         //??S4RI?
 315   2              temp4=S4BUF;
 316   2         }
 317   1      if(TI4)
 318   1              {
 319   2                      CLR_TI4();
 320   2                      busy4 = 0;               //清忙标志
 321   2              }
 322   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1276    ----
   CONSTANT SIZE    =     86    ----
   XDATA SIZE       =     56      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  3 WARNING(S),  0 ERROR(S)
